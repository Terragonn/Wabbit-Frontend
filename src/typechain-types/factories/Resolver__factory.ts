/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Resolver, ResolverInterface } from "../Resolver";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "taskTreasury_",
        type: "address",
      },
      {
        internalType: "address",
        name: "depositReceiver_",
        type: "address",
      },
      {
        internalType: "address",
        name: "marginLong_",
        type: "address",
      },
      {
        internalType: "address",
        name: "converter_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "checkLiquidate",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "checkReset",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "converter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "executeLiquidate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "executeReset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "marginLong",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "converter_",
        type: "address",
      },
    ],
    name: "setConverter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "depositReceiver_",
        type: "address",
      },
    ],
    name: "setDepositReceiver",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "marginLong_",
        type: "address",
      },
    ],
    name: "setMarginLong",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "taskTreasury_",
        type: "address",
      },
    ],
    name: "setTaskTreasury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "taskTreasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200155738038062001557833981016040819052620000349162000100565b6200003f3362000093565b600180546001600160a01b039586166001600160a01b03199182161790915560028054948616948216949094179093556004805492851692841692909217909155600380549190931691161790556200015d565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b0381168114620000fb57600080fd5b919050565b600080600080608085870312156200011757600080fd5b6200012285620000e3565b93506200013260208601620000e3565b92506200014260408601620000e3565b91506200015260608601620000e3565b905092959194509250565b6113ea806200016d6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80638da5cb5b1161008c578063b19337a411610066578063b19337a4146101bb578063bd38837b146101ce578063e60a3213146101e1578063f2fde38b146101f457600080fd5b80638da5cb5b1461018f57806395b7b581146101a0578063ae8cb763146101b357600080fd5b806358b27216116100c857806358b272161461012a578063715018a6146101495780637e0b09b11461015157806386f041ba1461016457600080fd5b806323fac15e146100ef5780632b5d5e76146101045780635509708c14610117575b600080fd5b6101026100fd366004611057565b610207565b005b610102610112366004611057565b61025c565b610102610125366004611057565b6102a8565b610132610346565b6040516101409291906110cc565b60405180910390f35b610102610543565b61010261015f366004611057565b610579565b600454610177906001600160a01b031681565b6040516001600160a01b039091168152602001610140565b6000546001600160a01b0316610177565b6101026101ae366004611057565b6105b1565b6101326105fd565b6101026101c9366004611057565b61077a565b600354610177906001600160a01b031681565b600154610177906001600160a01b031681565b610102610202366004611057565b6107c6565b6000546001600160a01b0316331461023a5760405162461bcd60e51b8152600401610231906110e7565b60405180910390fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146102865760405162461bcd60e51b8152600401610231906110e7565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b600480546040516365189a7b60e11b81526001600160a01b03848116938201939093526000928392169063ca3134f6906024015b600060405180830381600087803b1580156102f657600080fd5b505af115801561030a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261033291908101906111fb565b915091506103408282610861565b50505050565b600060606000600460009054906101000a90046001600160a01b03166001600160a01b0316636847e50b6040518163ffffffff1660e01b815260040160006040518083038186803b15801561039a57600080fd5b505afa1580156103ae573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103d691908101906112b6565b905060005b81518110156105275760045482516001600160a01b039091169063ffec70af9084908490811061040d5761040d6112eb565b60200260200101516040518263ffffffff1660e01b815260040161044091906001600160a01b0391909116815260200190565b60206040518083038186803b15801561045857600080fd5b505afa15801561046c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104909190611301565b15610515576001637e0b09b160e01b8383815181106104b1576104b16112eb565b60200260200101516040516024016104d891906001600160a01b0391909116815260200190565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152909590945092505050565b8061051f81611339565b9150506103db565b5060006040518060200160405280600081525092509250509091565b6000546001600160a01b0316331461056d5760405162461bcd60e51b8152600401610231906110e7565b6105776000610b59565b565b60048054604051638ac5d4a360e01b81526001600160a01b038481169382019390935260009283921690638ac5d4a3906024016102dc565b6000546001600160a01b031633146105db5760405162461bcd60e51b8152600401610231906110e7565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b600060606000600460009054906101000a90046001600160a01b03166001600160a01b0316636847e50b6040518163ffffffff1660e01b815260040160006040518083038186803b15801561065157600080fd5b505afa158015610665573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261068d91908101906112b6565b905060005b81518110156105275760045482516001600160a01b0390911690632dbaacdc908490849081106106c4576106c46112eb565b60200260200101516040518263ffffffff1660e01b81526004016106f791906001600160a01b0391909116815260200190565b60206040518083038186803b15801561070f57600080fd5b505afa158015610723573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107479190611301565b15610768576001635509708c60e01b8383815181106104b1576104b16112eb565b8061077281611339565b915050610692565b6000546001600160a01b031633146107a45760405162461bcd60e51b8152600401610231906110e7565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146107f05760405162461bcd60e51b8152600401610231906110e7565b6001600160a01b0381166108555760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610231565b61085e81610b59565b50565b600080600090506108956040518060400160405280600c81526020016b496e70757420746f6b656e7360a01b815250610ba9565b60005b845181101561090f576108c38582815181106108b6576108b66112eb565b6020026020010151610bec565b6108e58482815181106108d8576108d86112eb565b6020026020010151610c34565b6108fd60405180602001604052806000815250610ba9565b8061090781611339565b915050610898565b5060005b8451811015610a8e576000848281518110610930576109306112eb565b60200260200101511115610a7c57600354845161099d916001600160a01b031690869084908110610963576109636112eb565b602002602001015187848151811061097d5761097d6112eb565b60200260200101516001600160a01b0316610c799092919063ffffffff16565b60035485516000916001600160a01b03169063fcf5ee8d908890859081106109c7576109c76112eb565b60200260200101518785815181106109e1576109e16112eb565b60200260200101516040518363ffffffff1660e01b8152600401610a1a9291906001600160a01b03929092168252602082015260400190565b602060405180830381600087803b158015610a3457600080fd5b505af1158015610a48573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a6c9190611354565b9050610a788382610dc4565b9250505b80610a8681611339565b915050610913565b50610acd6040518060400160405280601c81526020017f5374617274696e67206465706f73697420746f20747265617375727900000000815250610ba9565b60015460025460405163c1461d5760e01b81526001600160a01b03918216600482015273eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee60248201526044810184905291169063c1461d579083906064016000604051808303818588803b158015610b3857600080fd5b505af1158015610b4c573d6000803e3d6000fd5b5093979650505050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61085e81604051602401610bbd919061136d565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052610dd7565b6040516001600160a01b038216602482015261085e9060440160408051601f198184030181529190526020810180516001600160e01b031663161765e160e11b179052610dd7565b61085e81604051602401610c4a91815260200190565b60408051601f198184030181529190526020810180516001600160e01b031663f5b1bba960e01b179052610dd7565b801580610d025750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e9060440160206040518083038186803b158015610cc857600080fd5b505afa158015610cdc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d009190611354565b155b610d6d5760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b6064820152608401610231565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663095ea7b360e01b179052610dbf908490610df8565b505050565b6000610dd08284611380565b9392505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6000610e4d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610eca9092919063ffffffff16565b805190915015610dbf5780806020019051810190610e6b9190611301565b610dbf5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610231565b6060610ed98484600085610ee1565b949350505050565b606082471015610f425760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610231565b843b610f905760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610231565b600080866001600160a01b03168587604051610fac9190611398565b60006040518083038185875af1925050503d8060008114610fe9576040519150601f19603f3d011682016040523d82523d6000602084013e610fee565b606091505b5091509150610ffe828286611009565b979650505050505050565b60608315611018575081610dd0565b8251156110285782518084602001fd5b8160405162461bcd60e51b8152600401610231919061136d565b6001600160a01b038116811461085e57600080fd5b60006020828403121561106957600080fd5b8135610dd081611042565b60005b8381101561108f578181015183820152602001611077565b838111156103405750506000910152565b600081518084526110b8816020860160208601611074565b601f01601f19169290920160200192915050565b8215158152604060208201526000610ed960408301846110a0565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561115b5761115b61111c565b604052919050565b600067ffffffffffffffff82111561117d5761117d61111c565b5060051b60200190565b600082601f83011261119857600080fd5b815160206111ad6111a883611163565b611132565b82815260059290921b840181019181810190868411156111cc57600080fd5b8286015b848110156111f05780516111e381611042565b83529183019183016111d0565b509695505050505050565b6000806040838503121561120e57600080fd5b825167ffffffffffffffff8082111561122657600080fd5b61123286838701611187565b935060209150818501518181111561124957600080fd5b85019050601f8101861361125c57600080fd5b805161126a6111a882611163565b81815260059190911b8201830190838101908883111561128957600080fd5b928401925b828410156112a75783518252928401929084019061128e565b80955050505050509250929050565b6000602082840312156112c857600080fd5b815167ffffffffffffffff8111156112df57600080fd5b610ed984828501611187565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561131357600080fd5b81518015158114610dd057600080fd5b634e487b7160e01b600052601160045260246000fd5b600060001982141561134d5761134d611323565b5060010190565b60006020828403121561136657600080fd5b5051919050565b602081526000610dd060208301846110a0565b6000821982111561139357611393611323565b500190565b600082516113aa818460208701611074565b919091019291505056fea264697066735822122010faba58d7bc352c8c455e5f278199c1860b002314a3fc496eef83505393946764736f6c63430008090033";

type ResolverConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ResolverConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Resolver__factory extends ContractFactory {
  constructor(...args: ResolverConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Resolver";
  }

  deploy(
    taskTreasury_: string,
    depositReceiver_: string,
    marginLong_: string,
    converter_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Resolver> {
    return super.deploy(
      taskTreasury_,
      depositReceiver_,
      marginLong_,
      converter_,
      overrides || {}
    ) as Promise<Resolver>;
  }
  getDeployTransaction(
    taskTreasury_: string,
    depositReceiver_: string,
    marginLong_: string,
    converter_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      taskTreasury_,
      depositReceiver_,
      marginLong_,
      converter_,
      overrides || {}
    );
  }
  attach(address: string): Resolver {
    return super.attach(address) as Resolver;
  }
  connect(signer: Signer): Resolver__factory {
    return super.connect(signer) as Resolver__factory;
  }
  static readonly contractName: "Resolver";
  public readonly contractName: "Resolver";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ResolverInterface {
    return new utils.Interface(_abi) as ResolverInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Resolver {
    return new Contract(address, _abi, signerOrProvider) as Resolver;
  }
}
