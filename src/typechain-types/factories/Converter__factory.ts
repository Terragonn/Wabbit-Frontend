/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Converter, ConverterInterface } from "../Converter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "router_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn_",
        type: "uint256",
      },
    ],
    name: "maxAmountEthOut",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn_",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenOut_",
        type: "address",
      },
    ],
    name: "maxAmountTokenOut",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountOut_",
        type: "uint256",
      },
    ],
    name: "minAmountTokenInEthOut",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn_",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountOut_",
        type: "uint256",
      },
    ],
    name: "minAmountTokenInTokenOut",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "router_",
        type: "address",
      },
    ],
    name: "setRouter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn_",
        type: "uint256",
      },
    ],
    name: "swapMaxEthOut",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn_",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenOut_",
        type: "address",
      },
    ],
    name: "swapMaxTokenOut",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161158a38038061158a83398101604081905261002f916100ad565b6100383361005d565b600180546001600160a01b0319166001600160a01b03929092169190911790556100dd565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100bf57600080fd5b81516001600160a01b03811681146100d657600080fd5b9392505050565b61149e806100ec6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063c0c3d39711610071578063c0c3d39714610129578063c0d786551461013c578063d868e12d1461014f578063f2fde38b14610162578063f887ea4014610175578063fcf5ee8d1461018857600080fd5b8063715018a6146100ae57806373a1abe0146100b85780638da5cb5b146100de5780639994f75e14610103578063bd046e1a14610116575b600080fd5b6100b661019b565b005b6100cb6100c63660046110eb565b6101da565b6040519081526020015b60405180910390f35b6000546001600160a01b03165b6040516001600160a01b0390911681526020016100d5565b6100cb61011136600461112d565b6103e7565b6100cb61012436600461116e565b61059e565b6100cb61013736600461116e565b610735565b6100b661014a36600461119a565b6108b7565b6100cb61015d3660046110eb565b610903565b6100b661017036600461119a565b610a80565b6001546100eb906001600160a01b031681565b6100cb61019636600461116e565b610b1b565b6000546001600160a01b031633146101ce5760405162461bcd60e51b81526004016101c5906111b7565b60405180910390fd5b6101d86000610ca2565b565b6040805160038082526080820190925260009182919060208201606080368337019050509050848160008151811061021457610214611202565b6001600160a01b03928316602091820292909201810191909152600154604080516315ab88c960e31b81529051919093169263ad5c4648926004808301939192829003018186803b15801561026857600080fd5b505afa15801561027c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a09190611218565b816001815181106102b3576102b3611202565b60200260200101906001600160a01b031690816001600160a01b03168152505082816002815181106102e7576102e7611202565b6001600160a01b03928316602091820292909201015261030b908616333087610cf2565b600154610325906001600160a01b03878116911686610d63565b6001546000906001600160a01b03166338ed173986838533610348426001611235565b6040518663ffffffff1660e01b815260040161036895949392919061129f565b600060405180830381600087803b15801561038257600080fd5b505af1158015610396573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103be91908101906112db565b6001815181106103d0576103d0611202565b6020026020010151905080925050505b9392505050565b6040805160038082526080820190925260009182919060208201606080368337019050509050848160008151811061042157610421611202565b6001600160a01b03928316602091820292909201810191909152600154604080516315ab88c960e31b81529051919093169263ad5c4648926004808301939192829003018186803b15801561047557600080fd5b505afa158015610489573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ad9190611218565b816001815181106104c0576104c0611202565b60200260200101906001600160a01b031690816001600160a01b03168152505083816002815181106104f4576104f4611202565b6001600160a01b0392831660209182029290920101526001546040516307c0329d60e21b81526000929190911690631f00ca74906105389087908690600401611399565b60006040518083038186803b15801561055057600080fd5b505afa158015610564573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261058c91908101906112db565b6000815181106103d0576103d0611202565b6040805160028082526060820183526000928392919060208301908036833701905050905083816000815181106105d7576105d7611202565b6001600160a01b03928316602091820292909201810191909152600154604080516315ab88c960e31b81529051919093169263ad5c4648926004808301939192829003018186803b15801561062b57600080fd5b505afa15801561063f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106639190611218565b8160018151811061067657610676611202565b6001600160a01b03928316602091820292909201015260015460405163d06ca61f60e01b8152600092919091169063d06ca61f906106ba9087908690600401611399565b60006040518083038186803b1580156106d257600080fd5b505afa1580156106e6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261070e91908101906112db565b60018151811061072057610720611202565b60200260200101519050809250505092915050565b60408051600280825260608201835260009283929190602083019080368337019050509050838160008151811061076e5761076e611202565b6001600160a01b03928316602091820292909201810191909152600154604080516315ab88c960e31b81529051919093169263ad5c4648926004808301939192829003018186803b1580156107c257600080fd5b505afa1580156107d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107fa9190611218565b8160018151811061080d5761080d611202565b6001600160a01b0392831660209182029290920101526001546040516307c0329d60e21b81526000929190911690631f00ca74906108519087908690600401611399565b60006040518083038186803b15801561086957600080fd5b505afa15801561087d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108a591908101906112db565b60008151811061072057610720611202565b6000546001600160a01b031633146108e15760405162461bcd60e51b81526004016101c5906111b7565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6040805160038082526080820190925260009182919060208201606080368337019050509050848160008151811061093d5761093d611202565b6001600160a01b03928316602091820292909201810191909152600154604080516315ab88c960e31b81529051919093169263ad5c4648926004808301939192829003018186803b15801561099157600080fd5b505afa1580156109a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c99190611218565b816001815181106109dc576109dc611202565b60200260200101906001600160a01b031690816001600160a01b0316815250508281600281518110610a1057610a10611202565b6001600160a01b03928316602091820292909201015260015460405163d06ca61f60e01b8152600092919091169063d06ca61f90610a549088908690600401611399565b60006040518083038186803b158015610a6c57600080fd5b505afa158015610396573d6000803e3d6000fd5b6000546001600160a01b03163314610aaa5760405162461bcd60e51b81526004016101c5906111b7565b6001600160a01b038116610b0f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101c5565b610b1881610ca2565b50565b604080516002808252606082018352600092839291906020830190803683370190505090508381600081518110610b5457610b54611202565b6001600160a01b03928316602091820292909201810191909152600154604080516315ab88c960e31b81529051919093169263ad5c4648926004808301939192829003018186803b158015610ba857600080fd5b505afa158015610bbc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610be09190611218565b81600181518110610bf357610bf3611202565b6001600160a01b039283166020918202929092010152610c17908516333086610cf2565b600154610c31906001600160a01b03868116911685610d63565b6001546000906001600160a01b03166318cbafe585838533610c54426001611235565b6040518663ffffffff1660e01b8152600401610c7495949392919061129f565b600060405180830381600087803b158015610c8e57600080fd5b505af11580156106e6573d6000803e3d6000fd5b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040516001600160a01b0380851660248301528316604482015260648101829052610d5d9085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610e8c565b50505050565b801580610dec5750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e9060440160206040518083038186803b158015610db257600080fd5b505afa158015610dc6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dea91906113b2565b155b610e575760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b60648201526084016101c5565b6040516001600160a01b038316602482015260448101829052610e8790849063095ea7b360e01b90606401610d26565b505050565b6000610ee1826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610f5e9092919063ffffffff16565b805190915015610e875780806020019051810190610eff91906113cb565b610e875760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016101c5565b6060610f6d8484600085610f75565b949350505050565b606082471015610fd65760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016101c5565b843b6110245760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016101c5565b600080866001600160a01b031685876040516110409190611419565b60006040518083038185875af1925050503d806000811461107d576040519150601f19603f3d011682016040523d82523d6000602084013e611082565b606091505b509150915061109282828661109d565b979650505050505050565b606083156110ac5750816103e0565b8251156110bc5782518084602001fd5b8160405162461bcd60e51b81526004016101c59190611435565b6001600160a01b0381168114610b1857600080fd5b60008060006060848603121561110057600080fd5b833561110b816110d6565b9250602084013591506040840135611122816110d6565b809150509250925092565b60008060006060848603121561114257600080fd5b833561114d816110d6565b9250602084013561115d816110d6565b929592945050506040919091013590565b6000806040838503121561118157600080fd5b823561118c816110d6565b946020939093013593505050565b6000602082840312156111ac57600080fd5b81356103e0816110d6565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60006020828403121561122a57600080fd5b81516103e0816110d6565b6000821982111561125657634e487b7160e01b600052601160045260246000fd5b500190565b600081518084526020808501945080840160005b838110156112945781516001600160a01b03168752958201959082019060010161126f565b509495945050505050565b85815284602082015260a0604082015260006112be60a083018661125b565b6001600160a01b0394909416606083015250608001529392505050565b600060208083850312156112ee57600080fd5b825167ffffffffffffffff8082111561130657600080fd5b818501915085601f83011261131a57600080fd5b81518181111561132c5761132c6111ec565b8060051b604051601f19603f83011681018181108582111715611351576113516111ec565b60405291825284820192508381018501918883111561136f57600080fd5b938501935b8285101561138d57845184529385019392850192611374565b98975050505050505050565b828152604060208201526000610f6d604083018461125b565b6000602082840312156113c457600080fd5b5051919050565b6000602082840312156113dd57600080fd5b815180151581146103e057600080fd5b60005b838110156114085781810151838201526020016113f0565b83811115610d5d5750506000910152565b6000825161142b8184602087016113ed565b9190910192915050565b60208152600082518060208401526114548160408501602087016113ed565b601f01601f1916919091016040019291505056fea2646970667358221220b22b3e3e6bf7ae1da2b2c8a468c280aa304be469a236656d3e8bb480e29e563364736f6c63430008090033";

type ConverterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConverterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Converter__factory extends ContractFactory {
  constructor(...args: ConverterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Converter";
  }

  deploy(
    router_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Converter> {
    return super.deploy(router_, overrides || {}) as Promise<Converter>;
  }
  getDeployTransaction(
    router_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(router_, overrides || {});
  }
  attach(address: string): Converter {
    return super.attach(address) as Converter;
  }
  connect(signer: Signer): Converter__factory {
    return super.connect(signer) as Converter__factory;
  }
  static readonly contractName: "Converter";
  public readonly contractName: "Converter";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConverterInterface {
    return new utils.Interface(_abi) as ConverterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Converter {
    return new Contract(address, _abi, signerOrProvider) as Converter;
  }
}
