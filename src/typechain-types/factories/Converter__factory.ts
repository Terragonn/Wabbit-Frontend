/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Converter, ConverterInterface } from "../Converter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "router_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn_",
        type: "uint256",
      },
    ],
    name: "maxAmountEthOut",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn_",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenOut_",
        type: "address",
      },
    ],
    name: "maxAmountTokenOut",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountOut_",
        type: "uint256",
      },
    ],
    name: "minAmountTokenInEthOut",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn_",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountOut_",
        type: "uint256",
      },
    ],
    name: "minAmountTokenInTokenOut",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "router_",
        type: "address",
      },
    ],
    name: "setRouter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn_",
        type: "uint256",
      },
    ],
    name: "swapMaxEthOut",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn_",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenOut_",
        type: "address",
      },
    ],
    name: "swapMaxTokenOut",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516117eb3803806117eb83398101604081905261002f916100ad565b6100383361005d565b600180546001600160a01b0319166001600160a01b03929092169190911790556100dd565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100bf57600080fd5b81516001600160a01b03811681146100d657600080fd5b9392505050565b6116ff806100ec6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063c0c3d39711610071578063c0c3d39714610129578063c0d786551461013c578063d868e12d1461014f578063f2fde38b14610162578063f887ea4014610175578063fcf5ee8d1461018857600080fd5b8063715018a6146100ae57806373a1abe0146100b85780638da5cb5b146100de5780639994f75e14610103578063bd046e1a14610116575b600080fd5b6100b661019b565b005b6100cb6100c636600461134c565b6101da565b6040519081526020015b60405180910390f35b6000546001600160a01b03165b6040516001600160a01b0390911681526020016100d5565b6100cb61011136600461138e565b610498565b6100cb6101243660046113cf565b610665565b6100cb6101373660046113cf565b6107fc565b6100b661014a3660046113fb565b61097e565b6100cb61015d36600461134c565b6109ca565b6100b66101703660046113fb565b610b81565b6001546100eb906001600160a01b031681565b6100cb6101963660046113cf565b610c1c565b6000546001600160a01b031633146101ce5760405162461bcd60e51b81526004016101c590611418565b60405180910390fd5b6101d86000610e7f565b565b6040805160038082526080820190925260009182919060208201606080368337019050509050848160008151811061021457610214611463565b6001600160a01b03928316602091820292909201810191909152600154604080516315ab88c960e31b81529051919093169263ad5c4648926004808301939192829003018186803b15801561026857600080fd5b505afa15801561027c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a09190611479565b816001815181106102b3576102b3611463565b60200260200101906001600160a01b031690816001600160a01b03168152505082816002815181106102e7576102e7611463565b60200260200101906001600160a01b031690816001600160a01b03168152505061033060405180604001604052806008815260200167105c1c1c9bdd995960c21b815250610ecf565b6103538160008151811061034657610346611463565b6020026020010151610f12565b6103698160018151811061034657610346611463565b61037f8160028151811061034657610346611463565b61038884610f5a565b61039d6001600160a01b038616333087610f9f565b6001546103b7906001600160a01b03878116911686611010565b6001546000906001600160a01b03166338ed1739868385336103da426001611496565b6040518663ffffffff1660e01b81526004016103fa959493929190611500565b600060405180830381600087803b15801561041457600080fd5b505af1158015610428573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610450919081019061153c565b60028151811061046257610462611463565b6020026020010151905061047581610f5a565b61048d60405180602001604052806000815250610ecf565b9150505b9392505050565b604080516003808252608082019092526000918291906020820160608036833701905050905084816000815181106104d2576104d2611463565b6001600160a01b03928316602091820292909201810191909152600154604080516315ab88c960e31b81529051919093169263ad5c4648926004808301939192829003018186803b15801561052657600080fd5b505afa15801561053a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055e9190611479565b8160018151811061057157610571611463565b60200260200101906001600160a01b031690816001600160a01b03168152505083816002815181106105a5576105a5611463565b6001600160a01b0392831660209182029290920101526001546040516307c0329d60e21b81526000929190911690631f00ca74906105e990879086906004016115fa565b60006040518083038186803b15801561060157600080fd5b505afa158015610615573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261063d919081019061153c565b60008151811061064f5761064f611463565b6020026020010151905080925050509392505050565b60408051600280825260608201835260009283929190602083019080368337019050509050838160008151811061069e5761069e611463565b6001600160a01b03928316602091820292909201810191909152600154604080516315ab88c960e31b81529051919093169263ad5c4648926004808301939192829003018186803b1580156106f257600080fd5b505afa158015610706573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072a9190611479565b8160018151811061073d5761073d611463565b6001600160a01b03928316602091820292909201015260015460405163d06ca61f60e01b8152600092919091169063d06ca61f9061078190879086906004016115fa565b60006040518083038186803b15801561079957600080fd5b505afa1580156107ad573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107d5919081019061153c565b6001815181106107e7576107e7611463565b60200260200101519050809250505092915050565b60408051600280825260608201835260009283929190602083019080368337019050509050838160008151811061083557610835611463565b6001600160a01b03928316602091820292909201810191909152600154604080516315ab88c960e31b81529051919093169263ad5c4648926004808301939192829003018186803b15801561088957600080fd5b505afa15801561089d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c19190611479565b816001815181106108d4576108d4611463565b6001600160a01b0392831660209182029290920101526001546040516307c0329d60e21b81526000929190911690631f00ca749061091890879086906004016115fa565b60006040518083038186803b15801561093057600080fd5b505afa158015610944573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261096c919081019061153c565b6000815181106107e7576107e7611463565b6000546001600160a01b031633146109a85760405162461bcd60e51b81526004016101c590611418565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b60408051600380825260808201909252600091829190602082016060803683370190505090508481600081518110610a0457610a04611463565b6001600160a01b03928316602091820292909201810191909152600154604080516315ab88c960e31b81529051919093169263ad5c4648926004808301939192829003018186803b158015610a5857600080fd5b505afa158015610a6c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a909190611479565b81600181518110610aa357610aa3611463565b60200260200101906001600160a01b031690816001600160a01b0316815250508281600281518110610ad757610ad7611463565b6001600160a01b03928316602091820292909201015260015460405163d06ca61f60e01b8152600092919091169063d06ca61f90610b1b90889086906004016115fa565b60006040518083038186803b158015610b3357600080fd5b505afa158015610b47573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610b6f919081019061153c565b60028151811061064f5761064f611463565b6000546001600160a01b03163314610bab5760405162461bcd60e51b81526004016101c590611418565b6001600160a01b038116610c105760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101c5565b610c1981610e7f565b50565b604080516002808252606082018352600092839291906020830190803683370190505090508381600081518110610c5557610c55611463565b6001600160a01b03928316602091820292909201810191909152600154604080516315ab88c960e31b81529051919093169263ad5c4648926004808301939192829003018186803b158015610ca957600080fd5b505afa158015610cbd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ce19190611479565b81600181518110610cf457610cf4611463565b60200260200101906001600160a01b031690816001600160a01b031681525050610d3d60405180604001604052806008815260200167105c1c1c9bdd995960c21b815250610ecf565b610d538160008151811061034657610346611463565b610d698160018151811061034657610346611463565b610d7283610f5a565b610d876001600160a01b038516333086610f9f565b600154610da1906001600160a01b03868116911685611010565b6001546000906001600160a01b03166318cbafe585838533610dc4426001611496565b6040518663ffffffff1660e01b8152600401610de4959493929190611500565b600060405180830381600087803b158015610dfe57600080fd5b505af1158015610e12573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610e3a919081019061153c565b600181518110610e4c57610e4c611463565b60200260200101519050610e5f81610f5a565b610e7760405180602001604052806000815250610ecf565b949350505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610c1981604051602401610ee3919061163f565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052611139565b6040516001600160a01b0382166024820152610c199060440160408051601f198184030181529190526020810180516001600160e01b031663161765e160e11b179052611139565b610c1981604051602401610f7091815260200190565b60408051601f198184030181529190526020810180516001600160e01b031663f5b1bba960e01b179052611139565b6040516001600160a01b038085166024830152831660448201526064810182905261100a9085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261115a565b50505050565b8015806110995750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e9060440160206040518083038186803b15801561105f57600080fd5b505afa158015611073573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110979190611672565b155b6111045760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b60648201526084016101c5565b6040516001600160a01b03831660248201526044810182905261113490849063095ea7b360e01b90606401610fd3565b505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b60006111af826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661122c9092919063ffffffff16565b80519091501561113457808060200190518101906111cd919061168b565b6111345760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016101c5565b6060610e77848460008585843b6112855760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016101c5565b600080866001600160a01b031685876040516112a191906116ad565b60006040518083038185875af1925050503d80600081146112de576040519150601f19603f3d011682016040523d82523d6000602084013e6112e3565b606091505b50915091506112f38282866112fe565b979650505050505050565b6060831561130d575081610491565b82511561131d5782518084602001fd5b8160405162461bcd60e51b81526004016101c5919061163f565b6001600160a01b0381168114610c1957600080fd5b60008060006060848603121561136157600080fd5b833561136c81611337565b925060208401359150604084013561138381611337565b809150509250925092565b6000806000606084860312156113a357600080fd5b83356113ae81611337565b925060208401356113be81611337565b929592945050506040919091013590565b600080604083850312156113e257600080fd5b82356113ed81611337565b946020939093013593505050565b60006020828403121561140d57600080fd5b813561049181611337565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60006020828403121561148b57600080fd5b815161049181611337565b600082198211156114b757634e487b7160e01b600052601160045260246000fd5b500190565b600081518084526020808501945080840160005b838110156114f55781516001600160a01b0316875295820195908201906001016114d0565b509495945050505050565b85815284602082015260a06040820152600061151f60a08301866114bc565b6001600160a01b0394909416606083015250608001529392505050565b6000602080838503121561154f57600080fd5b825167ffffffffffffffff8082111561156757600080fd5b818501915085601f83011261157b57600080fd5b81518181111561158d5761158d61144d565b8060051b604051601f19603f830116810181811085821117156115b2576115b261144d565b6040529182528482019250838101850191888311156115d057600080fd5b938501935b828510156115ee578451845293850193928501926115d5565b98975050505050505050565b828152604060208201526000610e7760408301846114bc565b60005b8381101561162e578181015183820152602001611616565b8381111561100a5750506000910152565b602081526000825180602084015261165e816040850160208701611613565b601f01601f19169190910160400192915050565b60006020828403121561168457600080fd5b5051919050565b60006020828403121561169d57600080fd5b8151801515811461049157600080fd5b600082516116bf818460208701611613565b919091019291505056fea2646970667358221220e01bd298711aa7719ad246a194e49df76188fd9df88666e3abcf410835079a9d64736f6c63430008090033";

type ConverterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConverterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Converter__factory extends ContractFactory {
  constructor(...args: ConverterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Converter";
  }

  deploy(
    router_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Converter> {
    return super.deploy(router_, overrides || {}) as Promise<Converter>;
  }
  getDeployTransaction(
    router_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(router_, overrides || {});
  }
  attach(address: string): Converter {
    return super.attach(address) as Converter;
  }
  connect(signer: Signer): Converter__factory {
    return super.connect(signer) as Converter__factory;
  }
  static readonly contractName: "Converter";
  public readonly contractName: "Converter";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConverterInterface {
    return new utils.Interface(_abi) as ConverterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Converter {
    return new Contract(address, _abi, signerOrProvider) as Converter;
  }
}
