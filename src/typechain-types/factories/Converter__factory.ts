/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Converter, ConverterInterface } from "../Converter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "router_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn_",
        type: "uint256",
      },
    ],
    name: "maxAmountEthOut",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn_",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenOut_",
        type: "address",
      },
    ],
    name: "maxAmountTokenOut",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountOut_",
        type: "uint256",
      },
    ],
    name: "minAmountTokenInEthOut",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn_",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountOut_",
        type: "uint256",
      },
    ],
    name: "minAmountTokenInTokenOut",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "router_",
        type: "address",
      },
    ],
    name: "setRouter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenOut_",
        type: "address",
      },
    ],
    name: "swapMaxEthIn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn_",
        type: "uint256",
      },
    ],
    name: "swapMaxEthOut",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn_",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenOut_",
        type: "address",
      },
    ],
    name: "swapMaxTokenOut",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516119d63803806119d683398101604081905261002f916100ad565b6100383361005d565b600180546001600160a01b0319166001600160a01b03929092169190911790556100dd565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100bf57600080fd5b81516001600160a01b03811681146100d657600080fd5b9392505050565b6118ea806100ec6000396000f3fe6080604052600436106100a75760003560e01c8063c0c3d39711610064578063c0c3d3971461017b578063c0d786551461019b578063d868e12d146101bb578063f2fde38b146101db578063f887ea40146101fb578063fcf5ee8d1461021b57600080fd5b8063715018a6146100ac57806373a1abe0146100c35780638da5cb5b146100f65780639994f75e14610128578063af61ef3114610148578063bd046e1a1461015b575b600080fd5b3480156100b857600080fd5b506100c161023b565b005b3480156100cf57600080fd5b506100e36100de3660046114e3565b61027a565b6040519081526020015b60405180910390f35b34801561010257600080fd5b506000546001600160a01b03165b6040516001600160a01b0390911681526020016100ed565b34801561013457600080fd5b506100e3610143366004611525565b610388565b6100e3610156366004611566565b610433565b34801561016757600080fd5b506100e3610176366004611583565b610608565b34801561018757600080fd5b506100e3610196366004611583565b6106e1565b3480156101a757600080fd5b506100c16101b6366004611566565b61079b565b3480156101c757600080fd5b506100e36101d63660046114e3565b6107e7565b3480156101e757600080fd5b506100c16101f6366004611566565b610858565b34801561020757600080fd5b50600154610110906001600160a01b031681565b34801561022757600080fd5b506100e3610236366004611583565b6108f3565b6000546001600160a01b0316331461026e5760405162461bcd60e51b8152600401610265906115af565b60405180910390fd5b6102786000610b97565b565b6000806102878584610be7565b90506102a0335b6001600160a01b038716903087610ec7565b6001546102ba906001600160a01b03878116911686610f38565b6001546000906001600160a01b03166338ed1739868385336102dd4260016115fa565b6040518663ffffffff1660e01b81526004016102fd959493929190611656565b600060405180830381600087803b15801561031757600080fd5b505af115801561032b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261035391908101906116a8565b600183516103619190611766565b815181106103715761037161177d565b6020026020010151905080925050505b9392505050565b6000806103958585610be7565b6001546040516307c0329d60e21b81529192506000916001600160a01b0390911690631f00ca74906103cd9087908690600401611793565b60006040518083038186803b1580156103e557600080fd5b505afa1580156103f9573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261042191908101906116a8565b6000815181106103715761037161177d565b600080600061044184611061565b91509150811561054357600154604080516315ab88c960e31b815290516000926001600160a01b03169163ad5c4648916004808301926020929190829003018186803b15801561049057600080fd5b505afa1580156104a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c891906117ac565b9050806001600160a01b031663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b15801561050557600080fd5b505af1158015610519573d6000803e3d6000fd5b50505050506105396105283390565b6001600160a01b03831690346111a3565b5034949350505050565b6001546001600160a01b0316637ff36ab534600084336105644260016115fa565b6040518663ffffffff1660e01b815260040161058394939291906117c9565b6000604051808303818588803b15801561059c57600080fd5b505af11580156105b0573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f191682016040526105d991908101906116a8565b600182516105e79190611766565b815181106105f7576105f761177d565b602002602001015192505050919050565b6000806000610616856111d3565b91509150811561062a5783925050506106db565b60015460405163d06ca61f60e01b81526001600160a01b039091169063d06ca61f9061065c9087908590600401611793565b60006040518083038186803b15801561067457600080fd5b505afa158015610688573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106b091908101906116a8565b600182516106be9190611766565b815181106106ce576106ce61177d565b6020026020010151925050505b92915050565b60008060006106ef85611061565b9150915081156107035783925050506106db565b6001546040516307c0329d60e21b81526001600160a01b0390911690631f00ca74906107359087908590600401611793565b60006040518083038186803b15801561074d57600080fd5b505afa158015610761573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261078991908101906116a8565b6000815181106106ce576106ce61177d565b6000546001600160a01b031633146107c55760405162461bcd60e51b8152600401610265906115af565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000806107f48584610be7565b60015460405163d06ca61f60e01b81529192506000916001600160a01b039091169063d06ca61f9061082c9088908690600401611793565b60006040518083038186803b15801561084457600080fd5b505afa15801561032b573d6000803e3d6000fd5b6000546001600160a01b031633146108825760405162461bcd60e51b8152600401610265906115af565b6001600160a01b0381166108e75760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610265565b6108f081610b97565b50565b6000806000610901856111d3565b9150915061090f61028e3390565b8115610b0e57600154604080516315ab88c960e31b815290516000926001600160a01b03169163ad5c4648916004808301926020929190829003018186803b15801561095a57600080fd5b505afa15801561096e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099291906117ac565b604051632e1a7d4d60e01b8152600481018790529091506001600160a01b03821690632e1a7d4d90602401602060405180830381600087803b1580156109d757600080fd5b505af11580156109eb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a0f91906117fe565b506040805160008082526020820190925233908790604051610a319190611843565b60006040518083038185875af1925050503d8060008114610a6e576040519150601f19603f3d011682016040523d82523d6000602084013e610a73565b606091505b5050905080610b025760405162461bcd60e51b815260206004820152604f60248201527f436f6e7665727465723a204661696c656420746f207472616e7366657220455460448201527f4820746f2063616c6c65722e204d616b65207375726520636f6e74726163742060648201526e1858d8d95c1d1cc81c185e5b595b9d608a1b608482015260a401610265565b859450505050506106db565b600154610b28906001600160a01b03878116911686610f38565b6001546001600160a01b03166318cbafe58560008433610b494260016115fa565b6040518663ffffffff1660e01b8152600401610b69959493929190611656565b600060405180830381600087803b158015610b8357600080fd5b505af1158015610688573d6000803e3d6000fd5b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6060816001600160a01b0316836001600160a01b03161415610c575760405162461bcd60e51b8152602060048201526024808201527f436f6e7665727465723a20546f6b656e732063616e6e6f74206265207468652060448201526373616d6560e01b6064820152608401610265565b600154604080516315ab88c960e31b815290516000926001600160a01b03169163ad5c4648916004808301926020929190829003018186803b158015610c9c57600080fd5b505afa158015610cb0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd491906117ac565b90506060816001600160a01b0316856001600160a01b03161415610d7f5760408051600280825260608201835290916020830190803683370190505090508181600081518110610d2657610d2661177d565b60200260200101906001600160a01b031690816001600160a01b0316815250508381600181518110610d5a57610d5a61177d565b60200260200101906001600160a01b031690816001600160a01b031681525050610ebf565b816001600160a01b0316846001600160a01b03161415610e015760408051600280825260608201835290916020830190803683370190505090508481600081518110610dcd57610dcd61177d565b60200260200101906001600160a01b031690816001600160a01b0316815250508181600181518110610d5a57610d5a61177d565b6040805160038082526080820190925290602082016060803683370190505090508481600081518110610e3657610e3661177d565b60200260200101906001600160a01b031690816001600160a01b0316815250508181600181518110610e6a57610e6a61177d565b60200260200101906001600160a01b031690816001600160a01b0316815250508381600281518110610e9e57610e9e61177d565b60200260200101906001600160a01b031690816001600160a01b0316815250505b949350505050565b6040516001600160a01b0380851660248301528316604482015260648101829052610f329085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526112f1565b50505050565b801580610fc15750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e9060440160206040518083038186803b158015610f8757600080fd5b505afa158015610f9b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fbf91906117fe565b155b61102c5760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b6064820152608401610265565b6040516001600160a01b03831660248201526044810182905261105c90849063095ea7b360e01b90606401610efb565b505050565b600060606000600160009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b815260040160206040518083038186803b1580156110b557600080fd5b505afa1580156110c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110ed91906117ac565b90506060816001600160a01b0316856001600160a01b031614156111175760019590945092505050565b6040805160028082526060820183529091602083019080368337019050509050818160008151811061114b5761114b61177d565b60200260200101906001600160a01b031690816001600160a01b031681525050848160018151811061117f5761117f61177d565b6001600160a01b039092166020928302919091019091015260009590945092505050565b6040516001600160a01b03831660248201526044810182905261105c90849063a9059cbb60e01b90606401610efb565b600060606000600160009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b815260040160206040518083038186803b15801561122757600080fd5b505afa15801561123b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061125f91906117ac565b90506060816001600160a01b0316856001600160a01b031614156112895760019590945092505050565b604080516002808252606082018352909160208301908036833701905050905084816000815181106112bd576112bd61177d565b60200260200101906001600160a01b031690816001600160a01b031681525050818160018151811061117f5761117f61177d565b6000611346826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166113c39092919063ffffffff16565b80519091501561105c5780806020019051810190611364919061185f565b61105c5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610265565b6060610ebf848460008585843b61141c5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610265565b600080866001600160a01b031685876040516114389190611843565b60006040518083038185875af1925050503d8060008114611475576040519150601f19603f3d011682016040523d82523d6000602084013e61147a565b606091505b509150915061148a828286611495565b979650505050505050565b606083156114a4575081610381565b8251156114b45782518084602001fd5b8160405162461bcd60e51b81526004016102659190611881565b6001600160a01b03811681146108f057600080fd5b6000806000606084860312156114f857600080fd5b8335611503816114ce565b925060208401359150604084013561151a816114ce565b809150509250925092565b60008060006060848603121561153a57600080fd5b8335611545816114ce565b92506020840135611555816114ce565b929592945050506040919091013590565b60006020828403121561157857600080fd5b8135610381816114ce565b6000806040838503121561159657600080fd5b82356115a1816114ce565b946020939093013593505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b6000821982111561160d5761160d6115e4565b500190565b600081518084526020808501945080840160005b8381101561164b5781516001600160a01b031687529582019590820190600101611626565b509495945050505050565b85815284602082015260a06040820152600061167560a0830186611612565b6001600160a01b0394909416606083015250608001529392505050565b634e487b7160e01b600052604160045260246000fd5b600060208083850312156116bb57600080fd5b825167ffffffffffffffff808211156116d357600080fd5b818501915085601f8301126116e757600080fd5b8151818111156116f9576116f9611692565b8060051b604051601f19603f8301168101818110858211171561171e5761171e611692565b60405291825284820192508381018501918883111561173c57600080fd5b938501935b8285101561175a57845184529385019392850192611741565b98975050505050505050565b600082821015611778576117786115e4565b500390565b634e487b7160e01b600052603260045260246000fd5b828152604060208201526000610ebf6040830184611612565b6000602082840312156117be57600080fd5b8151610381816114ce565b8481526080602082015260006117e26080830186611612565b6001600160a01b03949094166040830152506060015292915050565b60006020828403121561181057600080fd5b5051919050565b60005b8381101561183257818101518382015260200161181a565b83811115610f325750506000910152565b60008251611855818460208701611817565b9190910192915050565b60006020828403121561187157600080fd5b8151801515811461038157600080fd5b60208152600082518060208401526118a0816040850160208701611817565b601f01601f1916919091016040019291505056fea2646970667358221220ae6043dd446bdb962e551b0aabbce70f6a7f8d85f3acc5c873a6c526d5631eda64736f6c63430008090033";

type ConverterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConverterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Converter__factory extends ContractFactory {
  constructor(...args: ConverterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Converter";
  }

  deploy(
    router_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Converter> {
    return super.deploy(router_, overrides || {}) as Promise<Converter>;
  }
  getDeployTransaction(
    router_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(router_, overrides || {});
  }
  attach(address: string): Converter {
    return super.attach(address) as Converter;
  }
  connect(signer: Signer): Converter__factory {
    return super.connect(signer) as Converter__factory;
  }
  static readonly contractName: "Converter";
  public readonly contractName: "Converter";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConverterInterface {
    return new utils.Interface(_abi) as ConverterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Converter {
    return new Contract(address, _abi, signerOrProvider) as Converter;
  }
}
