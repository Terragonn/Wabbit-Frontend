/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TimelockTax, TimelockTaxInterface } from "../TimelockTax";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "taxPercentageNumerator_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "taxPercentageDenominator_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "taxCooldown_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
    ],
    name: "claimTax",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lastTax",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "setTaxAccount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "taxAccount",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
    ],
    name: "taxClaimAvailable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "taxCooldown",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "taxPercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b506040516108c53803806108c583398101604081905261002f91610052565b600080546001600160a01b03191633179055600192909255600255608052610080565b60008060006060848603121561006757600080fd5b8351925060208401519150604084015190509250925092565b6080516108236100a260003960008181610111015261023401526108236000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063aa0b28ff1161005b578063aa0b28ff146100dc578063ae7b6d16146100ef578063c9d15a021461010c578063d0385b5e1461013357600080fd5b80636184c1641461008257806372ed01ec146100b25780639c2394f8146100c9575b600080fd5b600054610095906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100bb60035481565b6040519081526020016100a9565b6100bb6100d736600461064c565b610148565b6100bb6100ea36600461064c565b6101ee565b6100f76102e5565b604080519283526020830191909152016100a9565b6100bb7f000000000000000000000000000000000000000000000000000000000000000081565b61014661014136600461064c565b610312565b005b6040516370a0823160e01b815230600482015260009081906001600160a01b038416906370a082319060240160206040518083038186803b15801561018c57600080fd5b505afa1580156101a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c49190610675565b6002546001549192506000916101e691906101e0908590610367565b9061037a565b949350505050565b600080546001600160a01b0316336001600160a01b03161461022b5760405162461bcd60e51b81526004016102229061068e565b60405180910390fd5b600354610258907f0000000000000000000000000000000000000000000000000000000000000000610386565b4210156102b35760405162461bcd60e51b815260206004820152602360248201527f54696d656c6f636b5461783a20546f6f206561726c7920746f20636c61696d206044820152620e8c2f60eb1b6064820152608401610222565b60006102be83610148565b6000549091506102db906001600160a01b03858116911683610392565b4260035592915050565b6040805180820190915260015481526002546020820152600090819061030a906103e9565b915091509091565b6000546001600160a01b0316336001600160a01b0316146103455760405162461bcd60e51b81526004016102229061068e565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b600061037382846106f3565b9392505050565b60006103738284610712565b60006103738284610734565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526103e490849061046f565b505050565b6000808280602001516000141561045f5760405162461bcd60e51b815260206004820152603460248201527f4672616374696f6e4d6174683a2044656e6f6d696e61746f72206f662066726160448201527306374696f6e2063616e6e6f7420657175616c20360641b6064820152608401610222565b5050815160209092015191929050565b60006104c4826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166105419092919063ffffffff16565b8051909150156103e457808060200190518101906104e2919061074c565b6103e45760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610222565b60606101e6848460008585843b61059a5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610222565b600080866001600160a01b031685876040516105b6919061079e565b60006040518083038185875af1925050503d80600081146105f3576040519150601f19603f3d011682016040523d82523d6000602084013e6105f8565b606091505b5091509150610608828286610613565b979650505050505050565b60608315610622575081610373565b8251156106325782518084602001fd5b8160405162461bcd60e51b815260040161022291906107ba565b60006020828403121561065e57600080fd5b81356001600160a01b038116811461037357600080fd5b60006020828403121561068757600080fd5b5051919050565b6020808252602f908201527f54696d656c6f636b5461783a204f6e6c792074686520746178206163636f756e60408201526e74206d61792063616c6c207468697360881b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561070d5761070d6106dd565b500290565b60008261072f57634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115610747576107476106dd565b500190565b60006020828403121561075e57600080fd5b8151801515811461037357600080fd5b60005b83811015610789578181015183820152602001610771565b83811115610798576000848401525b50505050565b600082516107b081846020870161076e565b9190910192915050565b60208152600082518060208401526107d981604085016020870161076e565b601f01601f1916919091016040019291505056fea2646970667358221220a2e5aa7314df0085b4d42c24b39d25aa4c9f8e0b783e1f43b936200c2d624af564736f6c63430008090033";

type TimelockTaxConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TimelockTaxConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TimelockTax__factory extends ContractFactory {
  constructor(...args: TimelockTaxConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "TimelockTax";
  }

  deploy(
    taxPercentageNumerator_: BigNumberish,
    taxPercentageDenominator_: BigNumberish,
    taxCooldown_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TimelockTax> {
    return super.deploy(
      taxPercentageNumerator_,
      taxPercentageDenominator_,
      taxCooldown_,
      overrides || {}
    ) as Promise<TimelockTax>;
  }
  getDeployTransaction(
    taxPercentageNumerator_: BigNumberish,
    taxPercentageDenominator_: BigNumberish,
    taxCooldown_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      taxPercentageNumerator_,
      taxPercentageDenominator_,
      taxCooldown_,
      overrides || {}
    );
  }
  attach(address: string): TimelockTax {
    return super.attach(address) as TimelockTax;
  }
  connect(signer: Signer): TimelockTax__factory {
    return super.connect(signer) as TimelockTax__factory;
  }
  static readonly contractName: "TimelockTax";
  public readonly contractName: "TimelockTax";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TimelockTaxInterface {
    return new utils.Interface(_abi) as TimelockTaxInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TimelockTax {
    return new Contract(address, _abi, signerOrProvider) as TimelockTax;
  }
}
