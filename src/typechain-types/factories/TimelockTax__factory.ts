/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TimelockTax, TimelockTaxInterface } from "../TimelockTax";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "taxPercentageNumerator_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "taxPercentageDenominator_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "taxCooldown_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
    ],
    name: "claimTax",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lastTax",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "setTaxAccount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "taxAccount",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "taxCooldown",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "taxPercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161083738038061083783398101604081905261002f91610052565b600080546001600160a01b03191633179055600192909255600255608052610080565b60008060006060848603121561006757600080fd5b8351925060208401519150604084015190509250925092565b6080516107966100a16000396000818160e3015261015d01526107966000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80636184c1641461006757806372ed01ec14610097578063aa0b28ff146100ae578063ae7b6d16146100c3578063c9d15a02146100de578063d0385b5e14610105575b600080fd5b60005461007a906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100a060035481565b60405190815260200161008e565b6100c16100bc3660046105bf565b610118565b005b6001546002546040805192835260208301919091520161008e565b6100a07f000000000000000000000000000000000000000000000000000000000000000081565b6100c16101133660046105bf565b61029e565b6000546001600160a01b0316336001600160a01b0316146101545760405162461bcd60e51b815260040161014b906105e8565b60405180910390fd5b600354610181907f00000000000000000000000000000000000000000000000000000000000000006102f3565b4210156101dc5760405162461bcd60e51b815260206004820152602360248201527f54696d656c6f636b5461783a20546f6f206561726c7920746f20636c61696d206044820152620e8c2f60eb1b606482015260840161014b565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a082319060240160206040518083038186803b15801561021e57600080fd5b505afa158015610232573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102569190610637565b6002546001549192506000916102789190610272908590610306565b90610312565b600054909150610295906001600160a01b0385811691168361031e565b50504260035550565b6000546001600160a01b0316336001600160a01b0316146102d15760405162461bcd60e51b815260040161014b906105e8565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b60006102ff8284610666565b9392505050565b60006102ff828461067e565b60006102ff828461069d565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610370908490610375565b505050565b60006103ca826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166104479092919063ffffffff16565b80519091501561037057808060200190518101906103e891906106bf565b6103705760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161014b565b6060610456848460008561045e565b949350505050565b6060824710156104bf5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161014b565b843b61050d5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161014b565b600080866001600160a01b031685876040516105299190610711565b60006040518083038185875af1925050503d8060008114610566576040519150601f19603f3d011682016040523d82523d6000602084013e61056b565b606091505b509150915061057b828286610586565b979650505050505050565b606083156105955750816102ff565b8251156105a55782518084602001fd5b8160405162461bcd60e51b815260040161014b919061072d565b6000602082840312156105d157600080fd5b81356001600160a01b03811681146102ff57600080fd5b6020808252602f908201527f54696d656c6f636b5461783a204f6e6c792074686520746178206163636f756e60408201526e74206d61792063616c6c207468697360881b606082015260800190565b60006020828403121561064957600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b6000821982111561067957610679610650565b500190565b600081600019048311821515161561069857610698610650565b500290565b6000826106ba57634e487b7160e01b600052601260045260246000fd5b500490565b6000602082840312156106d157600080fd5b815180151581146102ff57600080fd5b60005b838110156106fc5781810151838201526020016106e4565b8381111561070b576000848401525b50505050565b600082516107238184602087016106e1565b9190910192915050565b602081526000825180602084015261074c8160408501602087016106e1565b601f01601f1916919091016040019291505056fea26469706673582212205645fa6021e8dcaaa62f12ed7e5769b58a1f1fd250c574910f4a4424cf7b66b064736f6c63430008090033";

type TimelockTaxConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TimelockTaxConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TimelockTax__factory extends ContractFactory {
  constructor(...args: TimelockTaxConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "TimelockTax";
  }

  deploy(
    taxPercentageNumerator_: BigNumberish,
    taxPercentageDenominator_: BigNumberish,
    taxCooldown_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TimelockTax> {
    return super.deploy(
      taxPercentageNumerator_,
      taxPercentageDenominator_,
      taxCooldown_,
      overrides || {}
    ) as Promise<TimelockTax>;
  }
  getDeployTransaction(
    taxPercentageNumerator_: BigNumberish,
    taxPercentageDenominator_: BigNumberish,
    taxCooldown_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      taxPercentageNumerator_,
      taxPercentageDenominator_,
      taxCooldown_,
      overrides || {}
    );
  }
  attach(address: string): TimelockTax {
    return super.attach(address) as TimelockTax;
  }
  connect(signer: Signer): TimelockTax__factory {
    return super.connect(signer) as TimelockTax__factory;
  }
  static readonly contractName: "TimelockTax";
  public readonly contractName: "TimelockTax";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TimelockTaxInterface {
    return new utils.Interface(_abi) as TimelockTaxInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TimelockTax {
    return new Contract(address, _abi, signerOrProvider) as TimelockTax;
  }
}
