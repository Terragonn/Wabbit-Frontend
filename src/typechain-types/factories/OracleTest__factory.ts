/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { OracleTest, OracleTestInterface } from "../OracleTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "thresholdNumerator_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "thresholdDenominator_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "priceDecimals_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price_",
        type: "uint256",
      },
    ],
    name: "amountMax",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price_",
        type: "uint256",
      },
    ],
    name: "amountMin",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
    ],
    name: "decimals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
    ],
    name: "isSupported",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "priceDecimals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
    ],
    name: "priceFeed",
    outputs: [
      {
        internalType: "contract AggregatorV3Interface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "priceMax",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "priceMin",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
    ],
    name: "reservePriceFeed",
    outputs: [
      {
        internalType: "contract AggregatorV3Interface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price_",
        type: "uint256",
      },
    ],
    name: "setPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "token_",
        type: "address[]",
      },
      {
        internalType: "contract AggregatorV3Interface[]",
        name: "priceFeed_",
        type: "address[]",
      },
      {
        internalType: "contract AggregatorV3Interface[]",
        name: "reservePriceFeed_",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "correctDecimals_",
        type: "uint256[]",
      },
      {
        internalType: "bool[]",
        name: "supported_",
        type: "bool[]",
      },
    ],
    name: "setPriceFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "threshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161121c38038061121c83398101604081905261002f91610099565b61003833610049565b6004929092556005556003556100c7565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000806000606084860312156100ae57600080fd5b8351925060208401519150604084015190509250925092565b611146806100d66000396000f3fe608060405234801561001057600080fd5b50600436106100f45760003560e01c80636145f2031161009757806395f881c91161006657806395f881c91461025e578063b1d5e1b914610271578063d449a83214610284578063f2fde38b1461029757600080fd5b80636145f20314610202578063715018a614610215578063833b82821461021d5780638da5cb5b1461024d57600080fd5b806342cde4e8116100d357806342cde4e814610180578063468cde721461019d5780634f129c53146101b0578063561c2ed8146101ef57600080fd5b8062e4768b146100f957806305300b28146101255780631fd48b9a1461013c575b600080fd5b610123610107366004610b8f565b6001600160a01b03909116600090815260026020526040902055565b005b6003545b6040519081526020015b60405180910390f35b61016861014a366004610bbb565b6001600160a01b039081166000908152600160205260409020541690565b6040516001600160a01b039091168152602001610133565b6101886102aa565b60408051928352602083019190915201610133565b6101296101ab366004610b8f565b6102d7565b6101df6101be366004610bbb565b6001600160a01b031660009081526001602052604090206003015460ff1690565b6040519015158152602001610133565b6101296101fd366004610b8f565b610326565b610123610210366004610d7c565b610379565b6101236104e3565b61016861022b366004610bbb565b6001600160a01b03908116600090815260016020819052604090912001541690565b6000546001600160a01b0316610168565b61012961026c366004610b8f565b610519565b61012961027f366004610b8f565b610534565b610129610292366004610bbb565b610565565b6101236102a5366004610bbb565b610583565b604080518082019091526004548152600554602082015260009081906102cf9061061e565b915091509091565b6000806102f2846102e786610565565b6101fd90600a610f48565b905061031c8161031661030487610565565b61030f90600a610f48565b8690610657565b9061066a565b9150505b92915050565b6040805180820190915260045481526005546020820152600090819061035790610351600180610676565b906106fe565b905061031c8160200151610316836000015161037388886107ac565b90610657565b6000546001600160a01b031633146103ac5760405162461bcd60e51b81526004016103a390610f54565b60405180910390fd5b60005b85518110156104db576000600160008884815181106103d0576103d0610f89565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020905085828151811061040c5761040c610f89565b602090810291909101015181546001600160a01b0319166001600160a01b03909116178155845185908390811061044557610445610f89565b60200260200101518160010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555083828151811061048757610487610f89565b602002602001015181600201819055508282815181106104a9576104a9610f89565b6020908102919091010151600391909101805460ff1916911515919091179055806104d381610f9f565b9150506103af565b505050505050565b6000546001600160a01b0316331461050d5760405162461bcd60e51b81526004016103a390610f54565b6105176000610a87565b565b6000806102f28461052986610565565b61027f90600a610f48565b604080518082019091526004548152600554602082015260009081906103579061055f600180610676565b90610ad7565b6001600160a01b031660009081526001602052604090206002015490565b6000546001600160a01b031633146105ad5760405162461bcd60e51b81526004016103a390610f54565b6001600160a01b0381166106125760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103a3565b61061b81610a87565b50565b600080828060200151600014156106475760405162461bcd60e51b81526004016103a390610fba565b5050815160209092015191929050565b6000610663828461100e565b9392505050565b6000610663828461102d565b6040805180820190915260008082526020820152816106e85760405162461bcd60e51b815260206004820152602860248201527f4672616374696f6e4d6174683a2044656e6f6d696e61746f722063616e6e6f7460448201526720657175616c206f60c01b60648201526084016103a3565b5060408051808201909152918252602082015290565b6040805180820190915260008082526020820152828060200151600014156107385760405162461bcd60e51b81526004016103a390610fba565b8280602001516000141561075e5760405162461bcd60e51b81526004016103a390610fba565b60208501518451610789916107739190610657565b6020860151875161078391610657565b90610b62565b83526020808501519086015161079e91610657565b602084015250909392505050565b6000806107e96107bb85610565565b6107c690600a610f48565b6001600160a01b0386166000908152600260205260409020546103169086610657565b905080156107f8579050610320565b6001600160a01b0380851660009081526001602052604081205490911690506000816001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561085257600080fd5b505afa158015610866573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061088a919061106e565b5050509150506000826001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156108cb57600080fd5b505afa1580156108df573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090391906110be565b60ff16905060008213610a25576001600160a01b0380881660009081526001602081905260409091200154169250826001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561096a57600080fd5b505afa15801561097e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a2919061106e565b50506040805163313ce56760e01b815290519295506001600160a01b038716935063313ce5679260048083019350602092829003018186803b1580156109e757600080fd5b505afa1580156109fb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1f91906110be565b60ff1690505b60008213610a3a576000945050505050610320565b610a7c610a4688610565565b610a5190600a610f48565b610316610a5f84600a610f48565b6103168a610373600354600a610a759190610f48565b8990610657565b979650505050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b604080518082019091526000808252602082015282806020015160001415610b115760405162461bcd60e51b81526004016103a390610fba565b82806020015160001415610b375760405162461bcd60e51b81526004016103a390610fba565b6020850151845161078991610b4c9190610657565b60208601518751610b5c91610657565b90610b6e565b600061066382846110e1565b600061066382846110f9565b6001600160a01b038116811461061b57600080fd5b60008060408385031215610ba257600080fd5b8235610bad81610b7a565b946020939093013593505050565b600060208284031215610bcd57600080fd5b813561066381610b7a565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610c1757610c17610bd8565b604052919050565b600067ffffffffffffffff821115610c3957610c39610bd8565b5060051b60200190565b600082601f830112610c5457600080fd5b81356020610c69610c6483610c1f565b610bee565b82815260059290921b84018101918181019086841115610c8857600080fd5b8286015b84811015610cac578035610c9f81610b7a565b8352918301918301610c8c565b509695505050505050565b600082601f830112610cc857600080fd5b81356020610cd8610c6483610c1f565b82815260059290921b84018101918181019086841115610cf757600080fd5b8286015b84811015610cac5780358352918301918301610cfb565b600082601f830112610d2357600080fd5b81356020610d33610c6483610c1f565b82815260059290921b84018101918181019086841115610d5257600080fd5b8286015b84811015610cac5780358015158114610d6f5760008081fd5b8352918301918301610d56565b600080600080600060a08688031215610d9457600080fd5b853567ffffffffffffffff80821115610dac57600080fd5b610db889838a01610c43565b96506020880135915080821115610dce57600080fd5b610dda89838a01610c43565b95506040880135915080821115610df057600080fd5b610dfc89838a01610c43565b94506060880135915080821115610e1257600080fd5b610e1e89838a01610cb7565b93506080880135915080821115610e3457600080fd5b50610e4188828901610d12565b9150509295509295909350565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115610e9f578160001904821115610e8557610e85610e4e565b80851615610e9257918102915b93841c9390800290610e69565b509250929050565b600082610eb657506001610320565b81610ec357506000610320565b8160018114610ed95760028114610ee357610eff565b6001915050610320565b60ff841115610ef457610ef4610e4e565b50506001821b610320565b5060208310610133831016604e8410600b8410161715610f22575081810a610320565b610f2c8383610e64565b8060001904821115610f4057610f40610e4e565b029392505050565b60006106638383610ea7565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052603260045260246000fd5b6000600019821415610fb357610fb3610e4e565b5060010190565b60208082526034908201527f4672616374696f6e4d6174683a2044656e6f6d696e61746f72206f662066726160408201527306374696f6e2063616e6e6f7420657175616c20360641b606082015260800190565b600081600019048311821515161561102857611028610e4e565b500290565b60008261104a57634e487b7160e01b600052601260045260246000fd5b500490565b805169ffffffffffffffffffff8116811461106957600080fd5b919050565b600080600080600060a0868803121561108657600080fd5b61108f8661104f565b94506020860151935060408601519250606086015191506110b26080870161104f565b90509295509295909350565b6000602082840312156110d057600080fd5b815160ff8116811461066357600080fd5b600082198211156110f4576110f4610e4e565b500190565b60008282101561110b5761110b610e4e565b50039056fea2646970667358221220f76fad0ee29ef28ca77393eeb902027edd39c76d0b5c0a4bf2c14b8b962c3e3464736f6c63430008090033";

type OracleTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OracleTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OracleTest__factory extends ContractFactory {
  constructor(...args: OracleTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "OracleTest";
  }

  deploy(
    thresholdNumerator_: BigNumberish,
    thresholdDenominator_: BigNumberish,
    priceDecimals_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OracleTest> {
    return super.deploy(
      thresholdNumerator_,
      thresholdDenominator_,
      priceDecimals_,
      overrides || {}
    ) as Promise<OracleTest>;
  }
  getDeployTransaction(
    thresholdNumerator_: BigNumberish,
    thresholdDenominator_: BigNumberish,
    priceDecimals_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      thresholdNumerator_,
      thresholdDenominator_,
      priceDecimals_,
      overrides || {}
    );
  }
  attach(address: string): OracleTest {
    return super.attach(address) as OracleTest;
  }
  connect(signer: Signer): OracleTest__factory {
    return super.connect(signer) as OracleTest__factory;
  }
  static readonly contractName: "OracleTest";
  public readonly contractName: "OracleTest";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OracleTestInterface {
    return new utils.Interface(_abi) as OracleTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OracleTest {
    return new Contract(address, _abi, signerOrProvider) as OracleTest;
  }
}
