/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Oracle, OracleInterface } from "../Oracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "thresholdNumerator_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "thresholdDenominator_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "priceDecimals_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price_",
        type: "uint256",
      },
    ],
    name: "amountMax",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price_",
        type: "uint256",
      },
    ],
    name: "amountMin",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
    ],
    name: "decimals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
    ],
    name: "isSupported",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "priceDecimals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
    ],
    name: "priceFeed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "priceMax",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "priceMin",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
    ],
    name: "reservePriceFeed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "priceDecimals_",
        type: "uint256",
      },
    ],
    name: "setPriceDecimals",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "token_",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "priceFeed_",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "reservePriceFeed_",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "correctDecimals_",
        type: "uint256[]",
      },
      {
        internalType: "bool[]",
        name: "supported_",
        type: "bool[]",
      },
    ],
    name: "setPriceFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "thresholdNumerator_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "thresholdDenominator_",
        type: "uint256",
      },
    ],
    name: "setThreshold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "threshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516112ec3803806112ec83398101604081905261002f91610099565b61003833610049565b6003929092556004556002556100c7565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000806000606084860312156100ae57600080fd5b8351925060208401519150604084015190509250925092565b611216806100d66000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063715018a611610097578063b1d5e1b911610066578063b1d5e1b91461024a578063b9c362091461025d578063d449a83214610270578063f2fde38b1461028357600080fd5b8063715018a6146101ee578063833b8282146101f65780638da5cb5b1461022657806395f881c91461023757600080fd5b8063468cde72116100d3578063468cde72146101925780634f129c53146101a5578063561c2ed8146101c85780636145f203146101db57600080fd5b806305300b28146101055780631fd48b9a1461011c578063317c94ba1461016057806342cde4e814610175575b600080fd5b6002545b6040519081526020015b60405180910390f35b61014861012a366004610c2f565b6001600160a01b039081166000908152600160205260409020541690565b6040516001600160a01b039091168152602001610113565b61017361016e366004610c4a565b610296565b005b61017d6102ce565b60408051928352602083019190915201610113565b6101096101a0366004610c63565b6102fb565b6101b86101b3366004610c2f565b61034a565b6040519015158152602001610113565b6101096101d6366004610c63565b61036e565b6101736101e9366004610e2f565b6103c1565b610173610522565b610148610204366004610c2f565b6001600160a01b03908116600090815260016020819052604090912001541690565b6000546001600160a01b0316610148565b610109610245366004610c63565b610558565b610109610258366004610c63565b610573565b61017361026b366004610f01565b6105a4565b61010961027e366004610c2f565b6105d9565b610173610291366004610c2f565b6105f7565b6000546001600160a01b031633146102c95760405162461bcd60e51b81526004016102c090610f23565b60405180910390fd5b600255565b604080518082019091526003548152600454602082015260009081906102f390610692565b915091509091565b6000806103168461030b866105d9565b6101d690600a611052565b90506103408161033a610328876105d9565b61033390600a611052565b86906106cb565b906106de565b9150505b92915050565b6001600160a01b03811660009081526001602052604081206003015460ff16610344565b6040805180820190915260035481526004546020820152600090819061039f906103996001806106ea565b90610772565b9050610340816020015161033a83600001516103bb8888610820565b906106cb565b6000546001600160a01b031633146103eb5760405162461bcd60e51b81526004016102c090610f23565b60005b855181101561051a5760006001600088848151811061040f5761040f61105e565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020905085828151811061044b5761044b61105e565b602090810291909101015181546001600160a01b0319166001600160a01b0390911617815584518590839081106104845761048461105e565b60200260200101518160010160006101000a8154816001600160a01b0302191690836001600160a01b031602179055508382815181106104c6576104c661105e565b602002602001015181600201819055508282815181106104e8576104e861105e565b6020908102919091010151600391909101805460ff19169115159190911790558061051281611074565b9150506103ee565b505050505050565b6000546001600160a01b0316331461054c5760405162461bcd60e51b81526004016102c090610f23565b6105566000610b20565b565b60008061031684610568866105d9565b61025890600a611052565b6040805180820190915260035481526004546020820152600090819061039f9061059e6001806106ea565b90610b70565b6000546001600160a01b031633146105ce5760405162461bcd60e51b81526004016102c090610f23565b600391909155600455565b6001600160a01b031660009081526001602052604090206002015490565b6000546001600160a01b031633146106215760405162461bcd60e51b81526004016102c090610f23565b6001600160a01b0381166106865760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102c0565b61068f81610b20565b50565b600080828060200151600014156106bb5760405162461bcd60e51b81526004016102c09061108f565b5050815160209092015191929050565b60006106d782846110e3565b9392505050565b60006106d78284611102565b60408051808201909152600080825260208201528161075c5760405162461bcd60e51b815260206004820152602860248201527f4672616374696f6e4d6174683a2044656e6f6d696e61746f722063616e6e6f7460448201526720657175616c206f60c01b60648201526084016102c0565b5060408051808201909152918252602082015290565b6040805180820190915260008082526020820152828060200151600014156107ac5760405162461bcd60e51b81526004016102c09061108f565b828060200151600014156107d25760405162461bcd60e51b81526004016102c09061108f565b602085015184516107fd916107e791906106cb565b602086015187516107f7916106cb565b90610bfb565b835260208085015190860151610812916106cb565b602084015250909392505050565b60008261082c8161034a565b6108905760405162461bcd60e51b815260206004820152602f60248201527f4f7261636c65546f6b656e733a204f6e6c7920737570706f7274656420746f6b60448201526e195b9cc81b585e481899481d5cd959608a1b60648201526084016102c0565b6001600160a01b0380851660009081526001602052604081205490911690506000816001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156108ea57600080fd5b505afa1580156108fe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610922919061113e565b5050509150506000826001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561096357600080fd5b505afa158015610977573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099b919061118e565b60ff16905060008213610abd576001600160a01b0380881660009081526001602081905260409091200154169250826001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015610a0257600080fd5b505afa158015610a16573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a3a919061113e565b50506040805163313ce56760e01b815290519295506001600160a01b038716935063313ce5679260048083019350602092829003018186803b158015610a7f57600080fd5b505afa158015610a93573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab7919061118e565b60ff1690505b60008213610ad15760009450505050610b19565b610b13610add886105d9565b610ae890600a611052565b61033a610af684600a611052565b61033a8a6103bb600254600a610b0c9190611052565b89906106cb565b94505050505b5092915050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b604080518082019091526000808252602082015282806020015160001415610baa5760405162461bcd60e51b81526004016102c09061108f565b82806020015160001415610bd05760405162461bcd60e51b81526004016102c09061108f565b602085015184516107fd91610be591906106cb565b60208601518751610bf5916106cb565b90610c07565b60006106d782846111b1565b60006106d782846111c9565b80356001600160a01b0381168114610c2a57600080fd5b919050565b600060208284031215610c4157600080fd5b6106d782610c13565b600060208284031215610c5c57600080fd5b5035919050565b60008060408385031215610c7657600080fd5b610c7f83610c13565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610ccc57610ccc610c8d565b604052919050565b600067ffffffffffffffff821115610cee57610cee610c8d565b5060051b60200190565b600082601f830112610d0957600080fd5b81356020610d1e610d1983610cd4565b610ca3565b82815260059290921b84018101918181019086841115610d3d57600080fd5b8286015b84811015610d5f57610d5281610c13565b8352918301918301610d41565b509695505050505050565b600082601f830112610d7b57600080fd5b81356020610d8b610d1983610cd4565b82815260059290921b84018101918181019086841115610daa57600080fd5b8286015b84811015610d5f5780358352918301918301610dae565b600082601f830112610dd657600080fd5b81356020610de6610d1983610cd4565b82815260059290921b84018101918181019086841115610e0557600080fd5b8286015b84811015610d5f5780358015158114610e225760008081fd5b8352918301918301610e09565b600080600080600060a08688031215610e4757600080fd5b853567ffffffffffffffff80821115610e5f57600080fd5b610e6b89838a01610cf8565b96506020880135915080821115610e8157600080fd5b610e8d89838a01610cf8565b95506040880135915080821115610ea357600080fd5b610eaf89838a01610cf8565b94506060880135915080821115610ec557600080fd5b610ed189838a01610d6a565b93506080880135915080821115610ee757600080fd5b50610ef488828901610dc5565b9150509295509295909350565b60008060408385031215610f1457600080fd5b50508035926020909101359150565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115610fa9578160001904821115610f8f57610f8f610f58565b80851615610f9c57918102915b93841c9390800290610f73565b509250929050565b600082610fc057506001610344565b81610fcd57506000610344565b8160018114610fe35760028114610fed57611009565b6001915050610344565b60ff841115610ffe57610ffe610f58565b50506001821b610344565b5060208310610133831016604e8410600b841016171561102c575081810a610344565b6110368383610f6e565b806000190482111561104a5761104a610f58565b029392505050565b60006106d78383610fb1565b634e487b7160e01b600052603260045260246000fd5b600060001982141561108857611088610f58565b5060010190565b60208082526034908201527f4672616374696f6e4d6174683a2044656e6f6d696e61746f72206f662066726160408201527306374696f6e2063616e6e6f7420657175616c20360641b606082015260800190565b60008160001904831182151516156110fd576110fd610f58565b500290565b60008261111f57634e487b7160e01b600052601260045260246000fd5b500490565b805169ffffffffffffffffffff81168114610c2a57600080fd5b600080600080600060a0868803121561115657600080fd5b61115f86611124565b945060208601519350604086015192506060860151915061118260808701611124565b90509295509295909350565b6000602082840312156111a057600080fd5b815160ff811681146106d757600080fd5b600082198211156111c4576111c4610f58565b500190565b6000828210156111db576111db610f58565b50039056fea264697066735822122096f53a91b3df635388c54849772222ab101988e1949eb5c14ced6371bd40fbb664736f6c63430008090033";

type OracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Oracle__factory extends ContractFactory {
  constructor(...args: OracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Oracle";
  }

  deploy(
    thresholdNumerator_: BigNumberish,
    thresholdDenominator_: BigNumberish,
    priceDecimals_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Oracle> {
    return super.deploy(
      thresholdNumerator_,
      thresholdDenominator_,
      priceDecimals_,
      overrides || {}
    ) as Promise<Oracle>;
  }
  getDeployTransaction(
    thresholdNumerator_: BigNumberish,
    thresholdDenominator_: BigNumberish,
    priceDecimals_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      thresholdNumerator_,
      thresholdDenominator_,
      priceDecimals_,
      overrides || {}
    );
  }
  attach(address: string): Oracle {
    return super.attach(address) as Oracle;
  }
  connect(signer: Signer): Oracle__factory {
    return super.connect(signer) as Oracle__factory;
  }
  static readonly contractName: "Oracle";
  public readonly contractName: "Oracle";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OracleInterface {
    return new utils.Interface(_abi) as OracleInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Oracle {
    return new Contract(address, _abi, signerOrProvider) as Oracle;
  }
}
