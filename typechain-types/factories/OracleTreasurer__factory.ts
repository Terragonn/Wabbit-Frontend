/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  OracleTreasurer,
  OracleTreasurerInterface,
} from "../OracleTreasurer";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "oracle_",
        type: "address",
      },
      {
        internalType: "address",
        name: "pool_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price_",
        type: "uint256",
      },
    ],
    name: "amountMax",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price_",
        type: "uint256",
      },
    ],
    name: "amountMin",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
    ],
    name: "isSupported",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "priceDecimals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "priceMax",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "priceMin",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oracle_",
        type: "address",
      },
    ],
    name: "setOracle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool_",
        type: "address",
      },
    ],
    name: "setPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610f2f380380610f2f83398101604081905261002f916100da565b818161003a3361006e565b600180546001600160a01b039384166001600160a01b031991821617909155600280549290931691161790555061010d9050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146100d557600080fd5b919050565b600080604083850312156100ed57600080fd5b6100f6836100be565b9150610104602084016100be565b90509250929050565b610e138061011c6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063715018a61161008c5780638da5cb5b116100665780638da5cb5b146101a657806395f881c9146101b7578063b1d5e1b9146101ca578063f2fde38b146101dd57600080fd5b8063715018a6146101785780637adbf973146101805780637dc0d1d01461019357600080fd5b806305300b28146100d457806316f0115b146100ef5780634437152a1461011a578063468cde721461012f5780634f129c5314610142578063561c2ed814610165575b600080fd5b6100dc6101f0565b6040519081526020015b60405180910390f35b600254610102906001600160a01b031681565b6040516001600160a01b0390911681526020016100e6565b61012d610128366004610c95565b610271565b005b6100dc61013d366004610cb9565b6102c6565b610155610150366004610c95565b61051a565b60405190151581526020016100e6565b6100dc610173366004610cb9565b61064d565b61012d6107ee565b61012d61018e366004610c95565b610824565b600154610102906001600160a01b031681565b6000546001600160a01b0316610102565b6100dc6101c5366004610cb9565b610870565b6100dc6101d8366004610cb9565b61098e565b61012d6101eb366004610c95565b610b2f565b6001546040805162a6016560e31b815290516000926001600160a01b0316916305300b28916004808301926020929190829003018186803b15801561023457600080fd5b505afa158015610248573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061026c9190610ce5565b905090565b6000546001600160a01b031633146102a45760405162461bcd60e51b815260040161029b90610cfe565b60405180910390fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6000826102d28161051a565b6102ee5760405162461bcd60e51b815260040161029b90610d33565b6102f784610bca565b15610385576001546040516323466f3960e11b81526001600160a01b039091169063468cde729061032e9087908790600401610d85565b60206040518083038186803b15801561034657600080fd5b505afa15801561035a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061037e9190610ce5565b9150610513565b600254604051634c07d1b760e01b81526001600160a01b0386811660048301526000921690634c07d1b79060240160206040518083038186803b1580156103cb57600080fd5b505afa1580156103df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104039190610d9e565b6001546040516323466f3960e11b81529192506000916001600160a01b039091169063468cde729061043b9085908990600401610d85565b60206040518083038186803b15801561045357600080fd5b505afa158015610467573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048b9190610ce5565b600254604051637764114760e01b81529192506001600160a01b0316906377641147906104be9085908590600401610d85565b60206040518083038186803b1580156104d657600080fd5b505afa1580156104ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050e9190610ce5565b935050505b5092915050565b600061052582610bca565b1561053257506001919050565b61053b82610bfd565b61054757506000919050565b600154600254604051634c07d1b760e01b81526001600160a01b03858116600483015292831692634f129c53921690634c07d1b79060240160206040518083038186803b15801561059757600080fd5b505afa1580156105ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105cf9190610d9e565b6040516001600160e01b031960e084901b1681526001600160a01b0390911660048201526024015b60206040518083038186803b15801561060f57600080fd5b505afa158015610623573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106479190610dbb565b92915050565b6000826106598161051a565b6106755760405162461bcd60e51b815260040161029b90610d33565b61067e84610bca565b156106b557600154604051630ac385db60e31b81526001600160a01b039091169063561c2ed89061032e9087908790600401610d85565b6002546040516306752a2560e41b81526000916001600160a01b031690636752a250906106e89088908890600401610d85565b60206040518083038186803b15801561070057600080fd5b505afa158015610714573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107389190610ce5565b600254604051634c07d1b760e01b81526001600160a01b03888116600483015292935060009290911690634c07d1b79060240160206040518083038186803b15801561078357600080fd5b505afa158015610797573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107bb9190610d9e565b600154604051630ac385db60e31b81529192506001600160a01b03169063561c2ed8906104be9084908690600401610d85565b6000546001600160a01b031633146108185760405162461bcd60e51b815260040161029b90610cfe565b6108226000610c30565b565b6000546001600160a01b0316331461084e5760405162461bcd60e51b815260040161029b90610cfe565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b60008261087c8161051a565b6108985760405162461bcd60e51b815260040161029b90610d33565b6108a184610bca565b156108d8576001546040516395f881c960e01b81526001600160a01b03909116906395f881c99061032e9087908790600401610d85565b600254604051634c07d1b760e01b81526001600160a01b0386811660048301526000921690634c07d1b79060240160206040518083038186803b15801561091e57600080fd5b505afa158015610932573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109569190610d9e565b6001546040516395f881c960e01b81529192506000916001600160a01b03909116906395f881c99061043b9085908990600401610d85565b60008261099a8161051a565b6109b65760405162461bcd60e51b815260040161029b90610d33565b6109bf84610bca565b156109f65760015460405163b1d5e1b960e01b81526001600160a01b039091169063b1d5e1b99061032e9087908790600401610d85565b6002546040516306752a2560e41b81526000916001600160a01b031690636752a25090610a299088908890600401610d85565b60206040518083038186803b158015610a4157600080fd5b505afa158015610a55573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a799190610ce5565b600254604051634c07d1b760e01b81526001600160a01b03888116600483015292935060009290911690634c07d1b79060240160206040518083038186803b158015610ac457600080fd5b505afa158015610ad8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610afc9190610d9e565b60015460405163b1d5e1b960e01b81529192506001600160a01b03169063b1d5e1b9906104be9084908690600401610d85565b6000546001600160a01b03163314610b595760405162461bcd60e51b815260040161029b90610cfe565b6001600160a01b038116610bbe5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161029b565b610bc781610c30565b50565b600154604051634f129c5360e01b81526001600160a01b0383811660048301526000921690634f129c53906024016105f7565b600254604051637df0f76760e01b81526001600160a01b0383811660048301526000921690637df0f767906024016105f7565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b0381168114610bc757600080fd5b600060208284031215610ca757600080fd5b8135610cb281610c80565b9392505050565b60008060408385031215610ccc57600080fd5b8235610cd781610c80565b946020939093013593505050565b600060208284031215610cf757600080fd5b5051919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526032908201527f4f7261636c655472656173757265723a204f6e6c7920737570706f72746564206040820152711d1bdad95b9cc81b585e481899481d5cd95960721b606082015260800190565b6001600160a01b03929092168252602082015260400190565b600060208284031215610db057600080fd5b8151610cb281610c80565b600060208284031215610dcd57600080fd5b81518015158114610cb257600080fdfea2646970667358221220dc69377302f913edb14976193cb4cc06a09d191ed79000e50d2e91b0d8c1510164736f6c63430008090033";

type OracleTreasurerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OracleTreasurerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OracleTreasurer__factory extends ContractFactory {
  constructor(...args: OracleTreasurerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "OracleTreasurer";
  }

  deploy(
    oracle_: string,
    pool_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OracleTreasurer> {
    return super.deploy(
      oracle_,
      pool_,
      overrides || {}
    ) as Promise<OracleTreasurer>;
  }
  getDeployTransaction(
    oracle_: string,
    pool_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(oracle_, pool_, overrides || {});
  }
  attach(address: string): OracleTreasurer {
    return super.attach(address) as OracleTreasurer;
  }
  connect(signer: Signer): OracleTreasurer__factory {
    return super.connect(signer) as OracleTreasurer__factory;
  }
  static readonly contractName: "OracleTreasurer";
  public readonly contractName: "OracleTreasurer";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OracleTreasurerInterface {
    return new utils.Interface(_abi) as OracleTreasurerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OracleTreasurer {
    return new Contract(address, _abi, signerOrProvider) as OracleTreasurer;
  }
}
