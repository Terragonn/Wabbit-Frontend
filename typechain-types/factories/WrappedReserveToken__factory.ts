/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  WrappedReserveToken,
  WrappedReserveTokenInterface,
} from "../WrappedReserveToken";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "fromDelegate",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "toDelegate",
        type: "address",
      },
    ],
    name: "DelegateChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegate",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "previousBalance",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newBalance",
        type: "uint256",
      },
    ],
    name: "DelegateVotesChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "pos",
        type: "uint32",
      },
    ],
    name: "checkpoints",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "fromBlock",
            type: "uint32",
          },
          {
            internalType: "uint224",
            name: "votes",
            type: "uint224",
          },
        ],
        internalType: "struct ERC20VotesUpgradeable.Checkpoint",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
    ],
    name: "delegate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "delegateBySig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "delegates",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "getPastTotalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "getPastVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    name: "initializeWrappedReserveToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "numCheckpoints",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50612279806100206000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c80637ecebe00116100f9578063a9059cbb11610097578063dd62ed3e11610071578063dd62ed3e146103e2578063e4421bdf1461041b578063f1127ed81461042e578063f2fde38b1461046b57600080fd5b8063a9059cbb146103a9578063c3cda520146103bc578063d505accf146103cf57600080fd5b806395d89b41116100d357806395d89b41146103685780639ab24eb0146103705780639dc29fac14610383578063a457c2d71461039657600080fd5b80637ecebe00146103315780638da5cb5b146103445780638e539e8c1461035557600080fd5b80633a46b1a8116101665780635c19a95c116101405780635c19a95c146102c55780636fcfff45146102d857806370a0823114610300578063715018a61461032957600080fd5b80633a46b1a81461025957806340c10f191461026c578063587cde1e1461028157600080fd5b806323b872dd116101a257806323b872dd1461021c578063313ce5671461022f5780633644e5151461023e578063395093511461024657600080fd5b806306fdde03146101c9578063095ea7b3146101e757806318160ddd1461020a575b600080fd5b6101d161047e565b6040516101de9190611da3565b60405180910390f35b6101fa6101f5366004611e14565b610510565b60405190151581526020016101de565b6067545b6040519081526020016101de565b6101fa61022a366004611e3e565b610528565b604051601281526020016101de565b61020e61054c565b6101fa610254366004611e14565b61055b565b61020e610267366004611e14565b61059a565b61027f61027a366004611e14565b610619565b005b6102ad61028f366004611e7a565b6001600160a01b03908116600090815260fe60205260409020541690565b6040516001600160a01b0390911681526020016101de565b61027f6102d3366004611e7a565b610651565b6102eb6102e6366004611e7a565b61065e565b60405163ffffffff90911681526020016101de565b61020e61030e366004611e7a565b6001600160a01b031660009081526065602052604090205490565b61027f610686565b61020e61033f366004611e7a565b6106bc565b6033546001600160a01b03166102ad565b61020e610363366004611e95565b6106da565b6101d1610737565b61020e61037e366004611e7a565b610746565b61027f610391366004611e14565b6107cd565b6101fa6103a4366004611e14565b610801565b6101fa6103b7366004611e14565b610893565b61027f6103ca366004611ebf565b6108a1565b61027f6103dd366004611f17565b6109d7565b61020e6103f0366004611f81565b6001600160a01b03918216600090815260666020908152604080832093909416825291909152205490565b61027f610429366004612057565b610b1d565b61044161043c3660046120bb565b610bf3565b60408051825163ffffffff1681526020928301516001600160e01b031692810192909252016101de565b61027f610479366004611e7a565b610c77565b60606068805461048d906120fb565b80601f01602080910402602001604051908101604052809291908181526020018280546104b9906120fb565b80156105065780601f106104db57610100808354040283529160200191610506565b820191906000526020600020905b8154815290600101906020018083116104e957829003601f168201915b5050505050905090565b60003361051e818585610d0f565b5060019392505050565b600033610536858285610e33565b610541858585610ec5565b506001949350505050565b6000610556610f21565b905090565b3360008181526066602090815260408083206001600160a01b038716845290915281205490919061051e9082908690610595908790612146565b610d0f565b60004382106105f05760405162461bcd60e51b815260206004820152601f60248201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e65640060448201526064015b60405180910390fd5b6001600160a01b038316600090815260ff602052604090206106129083610f9c565b9392505050565b6033546001600160a01b031633146106435760405162461bcd60e51b81526004016105e79061215e565b61064d8282611059565b5050565b61065b3382611063565b50565b6001600160a01b038116600090815260ff6020526040812054610680906110dd565b92915050565b6033546001600160a01b031633146106b05760405162461bcd60e51b81526004016105e79061215e565b6106ba6000611146565b565b6001600160a01b038116600090815260cb6020526040812054610680565b600043821061072b5760405162461bcd60e51b815260206004820152601f60248201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e65640060448201526064016105e7565b61068061010083610f9c565b60606069805461048d906120fb565b6001600160a01b038116600090815260ff602052604081205480156107ba576001600160a01b038316600090815260ff60205260409020610788600183612193565b81548110610798576107986121aa565b60009182526020909120015464010000000090046001600160e01b03166107bd565b60005b6001600160e01b03169392505050565b6033546001600160a01b031633146107f75760405162461bcd60e51b81526004016105e79061215e565b61064d8282611198565b3360008181526066602090815260408083206001600160a01b0387168452909152812054909190838110156108865760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016105e7565b6105418286868403610d0f565b60003361051e818585610ec5565b834211156108f15760405162461bcd60e51b815260206004820152601d60248201527f4552433230566f7465733a207369676e6174757265206578706972656400000060448201526064016105e7565b604080517fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf60208201526001600160a01b03881691810191909152606081018690526080810185905260009061096b906109639060a001604051602081830303815290604052805190602001206111a2565b8585856111f0565b905061097681611218565b86146109c45760405162461bcd60e51b815260206004820152601960248201527f4552433230566f7465733a20696e76616c6964206e6f6e63650000000000000060448201526064016105e7565b6109ce8188611063565b50505050505050565b83421115610a275760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e6500000060448201526064016105e7565b600060cc54888888610a388c611218565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610a93826111a2565b90506000610aa3828787876111f0565b9050896001600160a01b0316816001600160a01b031614610b065760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e6174757265000060448201526064016105e7565b610b118a8a8a610d0f565b50505050505050505050565b600054610100900460ff16610b385760005460ff1615610b3c565b303b155b610b9f5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016105e7565b600054610100900460ff16158015610bc1576000805461ffff19166101011790555b610bc9611240565b610bd3838361126f565b610bdc836112a0565b8015610bee576000805461ff00191690555b505050565b60408051808201909152600080825260208201526001600160a01b038316600090815260ff60205260409020805463ffffffff8416908110610c3757610c376121aa565b60009182526020918290206040805180820190915291015463ffffffff8116825264010000000090046001600160e01b0316918101919091529392505050565b6033546001600160a01b03163314610ca15760405162461bcd60e51b81526004016105e79061215e565b6001600160a01b038116610d065760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105e7565b61065b81611146565b6001600160a01b038316610d715760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016105e7565b6001600160a01b038216610dd25760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016105e7565b6001600160a01b0383811660008181526066602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038381166000908152606660209081526040808320938616835292905220546000198114610ebf5781811015610eb25760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016105e7565b610ebf8484848403610d0f565b50505050565b60405162461bcd60e51b815260206004820152602b60248201527f5772617070656452657365727665546f6b656e3a205472616e7366657273206160448201526a1c9948191a5cd8589b195960aa1b60648201526084016105e7565b60006105567f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f610f5060975490565b6098546040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b8154600090815b81811015611000576000610fb782846112f3565b905084868281548110610fcc57610fcc6121aa565b60009182526020909120015463ffffffff161115610fec57809250610ffa565b610ff7816001612146565b91505b50610fa3565b81156110445784611012600184612193565b81548110611022576110226121aa565b60009182526020909120015464010000000090046001600160e01b0316611047565b60005b6001600160e01b031695945050505050565b61064d828261130e565b6001600160a01b03828116600081815260fe6020818152604080842080546065845282862054949093528787166001600160a01b03198416811790915590519190951694919391928592917f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a4610ebf828483611399565b600063ffffffff8211156111425760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b60648201526084016105e7565b5090565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b61064d82826114d6565b60006106806111af610f21565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b6000806000611201878787876114ef565b9150915061120e816115dc565b5095945050505050565b6001600160a01b038116600090815260cb602052604090208054600181018255905b50919050565b600054610100900460ff166112675760405162461bcd60e51b81526004016105e7906121c0565b6106ba611797565b600054610100900460ff166112965760405162461bcd60e51b81526004016105e7906121c0565b61064d82826117c7565b600054610100900460ff166112c75760405162461bcd60e51b81526004016105e7906121c0565b6112ea81604051806040016040528060018152602001603160f81b815250611815565b61065b81611856565b6000611302600284841861220b565b61061290848416612146565b61131882826118a4565b6067546001600160e01b03101561138a5760405162461bcd60e51b815260206004820152603060248201527f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f60448201526f766572666c6f77696e6720766f74657360801b60648201526084016105e7565b610ebf61010061198b83611997565b816001600160a01b0316836001600160a01b0316141580156113bb5750600081115b15610bee576001600160a01b03831615611449576001600160a01b038316600090815260ff6020526040812081906113f690611b1085611997565b91509150846001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724838360405161143e929190918252602082015260400190565b60405180910390a250505b6001600160a01b03821615610bee576001600160a01b038216600090815260ff60205260408120819061147f9061198b85611997565b91509150836001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a72483836040516114c7929190918252602082015260400190565b60405180910390a25050505050565b6114e08282611b1c565b610ebf610100611b1083611997565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561152657506000905060036115d3565b8460ff16601b1415801561153e57508460ff16601c14155b1561154f57506000905060046115d3565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156115a3573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166115cc576000600192509250506115d3565b9150600090505b94509492505050565b60008160048111156115f0576115f061222d565b14156115f95750565b600181600481111561160d5761160d61222d565b141561165b5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016105e7565b600281600481111561166f5761166f61222d565b14156116bd5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016105e7565b60038160048111156116d1576116d161222d565b141561172a5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016105e7565b600481600481111561173e5761173e61222d565b141561065b5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016105e7565b600054610100900460ff166117be5760405162461bcd60e51b81526004016105e7906121c0565b6106ba33611146565b600054610100900460ff166117ee5760405162461bcd60e51b81526004016105e7906121c0565b8151611801906068906020850190611d13565b508051610bee906069906020840190611d13565b600054610100900460ff1661183c5760405162461bcd60e51b81526004016105e7906121c0565b815160209283012081519190920120609791909155609855565b600054610100900460ff1661187d5760405162461bcd60e51b81526004016105e7906121c0565b507f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960cc55565b6001600160a01b0382166118fa5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016105e7565b806067600082825461190c9190612146565b90915550506001600160a01b03821660009081526065602052604081208054839290611939908490612146565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a361064d60008383611c6d565b60006106128284612146565b8254600090819080156119e257856119b0600183612193565b815481106119c0576119c06121aa565b60009182526020909120015464010000000090046001600160e01b03166119e5565b60005b6001600160e01b031692506119fe83858763ffffffff16565b9150600081118015611a3c57504386611a18600184612193565b81548110611a2857611a286121aa565b60009182526020909120015463ffffffff16145b15611a9c57611a4a82611c78565b86611a56600184612193565b81548110611a6657611a666121aa565b9060005260206000200160000160046101000a8154816001600160e01b0302191690836001600160e01b03160217905550611b07565b856040518060400160405280611ab1436110dd565b63ffffffff168152602001611ac585611c78565b6001600160e01b0390811690915282546001810184556000938452602093849020835194909301519091166401000000000263ffffffff909316929092179101555b50935093915050565b60006106128284612193565b6001600160a01b038216611b7c5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016105e7565b6001600160a01b03821660009081526065602052604090205481811015611bf05760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016105e7565b6001600160a01b0383166000908152606560205260408120838303905560678054849290611c1f908490612193565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3610bee836000845b610bee838383611ce1565b60006001600160e01b038211156111425760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b60648201526084016105e7565b6001600160a01b03838116600090815260fe6020526040808220548584168352912054610bee92918216911683611399565b828054611d1f906120fb565b90600052602060002090601f016020900481019282611d415760008555611d87565b82601f10611d5a57805160ff1916838001178555611d87565b82800160010185558215611d87579182015b82811115611d87578251825591602001919060010190611d6c565b506111429291505b808211156111425760008155600101611d8f565b600060208083528351808285015260005b81811015611dd057858101830151858201604001528201611db4565b81811115611de2576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114611e0f57600080fd5b919050565b60008060408385031215611e2757600080fd5b611e3083611df8565b946020939093013593505050565b600080600060608486031215611e5357600080fd5b611e5c84611df8565b9250611e6a60208501611df8565b9150604084013590509250925092565b600060208284031215611e8c57600080fd5b61061282611df8565b600060208284031215611ea757600080fd5b5035919050565b803560ff81168114611e0f57600080fd5b60008060008060008060c08789031215611ed857600080fd5b611ee187611df8565b95506020870135945060408701359350611efd60608801611eae565b92506080870135915060a087013590509295509295509295565b600080600080600080600060e0888a031215611f3257600080fd5b611f3b88611df8565b9650611f4960208901611df8565b95506040880135945060608801359350611f6560808901611eae565b925060a0880135915060c0880135905092959891949750929550565b60008060408385031215611f9457600080fd5b611f9d83611df8565b9150611fab60208401611df8565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112611fdb57600080fd5b813567ffffffffffffffff80821115611ff657611ff6611fb4565b604051601f8301601f19908116603f0116810190828211818310171561201e5761201e611fb4565b8160405283815286602085880101111561203757600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806040838503121561206a57600080fd5b823567ffffffffffffffff8082111561208257600080fd5b61208e86838701611fca565b935060208501359150808211156120a457600080fd5b506120b185828601611fca565b9150509250929050565b600080604083850312156120ce57600080fd5b6120d783611df8565b9150602083013563ffffffff811681146120f057600080fd5b809150509250929050565b600181811c9082168061210f57607f821691505b6020821081141561123a57634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000821982111561215957612159612130565b500190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000828210156121a5576121a5612130565b500390565b634e487b7160e01b600052603260045260246000fd5b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60008261222857634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220345a4d3492e70d5d4ebaebb08e1e9d0ca53e6022db46fb6bb5f7c514ff9c911f64736f6c63430008090033";

type WrappedReserveTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WrappedReserveTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WrappedReserveToken__factory extends ContractFactory {
  constructor(...args: WrappedReserveTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "WrappedReserveToken";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<WrappedReserveToken> {
    return super.deploy(overrides || {}) as Promise<WrappedReserveToken>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): WrappedReserveToken {
    return super.attach(address) as WrappedReserveToken;
  }
  connect(signer: Signer): WrappedReserveToken__factory {
    return super.connect(signer) as WrappedReserveToken__factory;
  }
  static readonly contractName: "WrappedReserveToken";
  public readonly contractName: "WrappedReserveToken";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WrappedReserveTokenInterface {
    return new utils.Interface(_abi) as WrappedReserveTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WrappedReserveToken {
    return new Contract(address, _abi, signerOrProvider) as WrappedReserveToken;
  }
}
