/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { OracleTest, OracleTestInterface } from "../OracleTest";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ORACLE_ADMIN",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price_",
        type: "uint256",
      },
    ],
    name: "amountMax",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price_",
        type: "uint256",
      },
    ],
    name: "amountMin",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
    ],
    name: "decimals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "priceDecimals_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "thresholdNumerator_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "thresholdDenominator_",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "priceDecimals_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "thresholdNumerator_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "thresholdDenominator_",
        type: "uint256",
      },
    ],
    name: "initializeOracleCore",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
    ],
    name: "isApproved",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
    ],
    name: "isSupported",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "priceDecimals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
    ],
    name: "priceFeed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "priceMax",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "priceMin",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "token_",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "priceFeed_",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "correctDecimals_",
        type: "uint256[]",
      },
      {
        internalType: "bool[]",
        name: "approved_",
        type: "bool[]",
      },
    ],
    name: "setApprovedPriceFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool_",
        type: "address",
      },
    ],
    name: "setPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price_",
        type: "uint256",
      },
    ],
    name: "setPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "priceDecimals_",
        type: "uint256",
      },
    ],
    name: "setPriceDecimals",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "thresholdNumerator_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "thresholdDenominator_",
        type: "uint256",
      },
    ],
    name: "setThreshold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "threshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50612322806100206000396000f3fe608060405234801561001057600080fd5b50600436106101ce5760003560e01c80634f129c531161010457806395f881c9116100a2578063b9c3620911610071578063b9c36209146103c7578063d449a832146103da578063d547741f146103ed578063fbe5d3ff1461040057600080fd5b806395f881c914610386578063a217fddf14610399578063ad7dbb90146103a1578063b1d5e1b9146103b457600080fd5b8063639433e6116100de578063639433e61461034f578063673448dd146103585780638456cb591461036b57806391d148541461037357600080fd5b80634f129c531461031e578063561c2ed8146103315780635c975abb1461034457600080fd5b8063317c94ba1161017157806342cde4e81161014b57806342cde4e8146102c85780634437152a146102e5578063468cde72146102f85780634ec81af11461030b57600080fd5b8063317c94ba1461029a57806336568abe146102ad5780633f4ba83a146102c057600080fd5b806316f0115b116101ad57806316f0115b146102265780631fd48b9a14610251578063248a9ca3146102645780632f2ff15d1461028757600080fd5b8062e4768b146101d357806301ffc9a7146101e857806305300b2814610210575b600080fd5b6101e66101e1366004611a7f565b610413565b005b6101fb6101f6366004611aab565b61047a565b60405190151581526020015b60405180910390f35b6102186104b1565b604051908152602001610207565b60ca54610239906001600160a01b031681565b6040516001600160a01b039091168152602001610207565b61023961025f366004611ad5565b6104c1565b610218610272366004611af2565b60009081526097602052604090206001015490565b6101e6610295366004611b0b565b610538565b6101e66102a8366004611af2565b610563565b6101e66102bb366004611b0b565b610576565b6101e66105f4565b6102d061060c565b60408051928352602083019190915201610207565b6101e66102f3366004611ad5565b610639565b610218610306366004611a7f565b610669565b6101e6610319366004611b3b565b61067c565b6101fb61032c366004611ad5565b610706565b61021861033f366004611a7f565b610711565b60335460ff166101fb565b61021860c95481565b6101fb610366366004611ad5565b61071d565b6101e6610766565b6101fb610381366004611b0b565b61077b565b610218610394366004611a7f565b6107a6565b610218600081565b6101e66103af366004611b3b565b6107b2565b6102186103c2366004611a7f565b61089b565b6101e66103d5366004611b76565b6108a7565b6102186103e8366004611ad5565b6108c0565b6101e66103fb366004611b0b565b610935565b6101e661040e366004611ce9565b61095b565b60335460ff161561045e5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064015b60405180910390fd5b6001600160a01b03909116600090815260cf6020526040902055565b60006001600160e01b03198216637965db0b60e01b14806104ab57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60006104bc60cb5490565b905090565b6000816104cd8161071d565b6104e95760405162461bcd60e51b815260040161045590611de9565b50506001600160a01b03908116600090815260ce6020908152604091829020825160608101845281549094168085526001820154928501929092526002015460ff161515929091019190915290565b6000828152609760205260409020600101546105548133610a5d565b61055e8383610ac1565b505050565b60c9546105708133610a5d565b5060cb55565b6001600160a01b03811633146105e65760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608401610455565b6105f08282610b47565b5050565b60c9546106018133610a5d565b610609610bae565b50565b6040805180820190915260cc54815260cd546020820152600090819061063190610c41565b915091509091565b60c9546106468133610a5d565b5060ca80546001600160a01b0319166001600160a01b0392909216919091179055565b60006106758383610c7e565b9392505050565b600054610100900460ff166106975760005460ff161561069b565b303b155b6106b75760405162461bcd60e51b815260040161045590611e39565b600054610100900460ff161580156106d9576000805461ffff19166101011790555b6106e1610de3565b6106ed858585856107b2565b80156106ff576000805461ff00191690555b5050505050565b60006104ab82610e14565b60006106758383610f27565b6001600160a01b03908116600090815260ce60209081526040918290208251606081018452815490941684526001810154918401919091526002015460ff161515910181905290565b60c9546107738133610a5d565b61060961107b565b60009182526097602090815260408084206001600160a01b0393909316845291905290205460ff1690565b600061067583836110f6565b600054610100900460ff166107cd5760005460ff16156107d1565b303b155b6107ed5760405162461bcd60e51b815260040161045590611e39565b600054610100900460ff1615801561080f576000805461ffff19166101011790555b6108176111c2565b7fc307c44629779eb8fc0b85f224c3d22f5876a6c84de0ee42d481eb7814f0d3a860c981905561084790806111e9565b61085960c9546108543390565b610ac1565b60ca80546001600160a01b0319166001600160a01b03871617905560cb84905560cc83905560cd82905580156106ff576000805461ff00191690555050505050565b60006106758383611234565b60c9546108b48133610a5d565b5060cc9190915560cd55565b6000816108cc8161071d565b6108e85760405162461bcd60e51b815260040161045590611de9565b50506001600160a01b03908116600090815260ce602090815260409182902082516060810184528154909416845260018101549184018290526002015460ff161515929091019190915290565b6000828152609760205260409020600101546109518133610a5d565b61055e8383610b47565b60c9546109688133610a5d565b60005b8551811015610a5557600060ce600088848151811061098c5761098c611e87565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002090508582815181106109c8576109c8611e87565b602090810291909101015181546001600160a01b0319166001600160a01b039091161781558451859083908110610a0157610a01611e87565b60200260200101518160010181905550838281518110610a2357610a23611e87565b6020908102919091010151600291909101805460ff191691151591909117905580610a4d81611eb3565b91505061096b565b505050505050565b610a67828261077b565b6105f057610a7f816001600160a01b03166014611388565b610a8a836020611388565b604051602001610a9b929190611efe565b60408051601f198184030181529082905262461bcd60e51b825261045591600401611f73565b610acb828261077b565b6105f05760008281526097602090815260408083206001600160a01b03851684529091529020805460ff19166001179055610b033390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b610b51828261077b565b156105f05760008281526097602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b60335460ff16610bf75760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610455565b6033805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b60008082610c528160200151151590565b610c6e5760405162461bcd60e51b815260040161045590611fa6565b5050815160209092015191929050565b600082610c8a81610706565b610ca65760405162461bcd60e51b815260040161045590611ffa565b610caf8461071d565b15610cc557610cbe8484611524565b9150610ddc565b60ca54604051634c07d1b760e01b81526001600160a01b0386811660048301526000921690634c07d1b79060240160206040518083038186803b158015610d0b57600080fd5b505afa158015610d1f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d439190612045565b90506000610d518286611524565b60ca546040516305e8e9d160e51b81526001600160a01b0385811660048301526024820184905292935091169063bd1d3a209060440160206040518083038186803b158015610d9f57600080fd5b505afa158015610db3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dd79190612062565b935050505b5092915050565b600054610100900460ff16610e0a5760405162461bcd60e51b81526004016104559061207b565b610e1261159e565b565b60ca54604051637df0f76760e01b81526001600160a01b0383811660048301526000921690637df0f7679060240160206040518083038186803b158015610e5a57600080fd5b505afa158015610e6e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e9291906120c6565b8015610f18575060ca54604051634c07d1b760e01b81526001600160a01b038481166004830152610f18921690634c07d1b79060240160206040518083038186803b158015610ee057600080fd5b505afa158015610ef4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103669190612045565b806104ab57506104ab8261071d565b600082610f3381610706565b610f4f5760405162461bcd60e51b815260040161045590611ffa565b610f588461071d565b15610f6757610cbe84846115d1565b60ca5460405163b7a0a03b60e01b81526001600160a01b03868116600483015260248201869052600092169063b7a0a03b9060440160206040518083038186803b158015610fb457600080fd5b505afa158015610fc8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fec9190612062565b60ca54604051634c07d1b760e01b81526001600160a01b03888116600483015292935060009290911690634c07d1b79060240160206040518083038186803b15801561103757600080fd5b505afa15801561104b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061106f9190612045565b9050610dd781836115d1565b60335460ff16156110c15760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610455565b6033805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610c243390565b60008261110281610706565b61111e5760405162461bcd60e51b815260040161045590611ffa565b6111278461071d565b1561113657610cbe8484611655565b60ca54604051634c07d1b760e01b81526001600160a01b0386811660048301526000921690634c07d1b79060240160206040518083038186803b15801561117c57600080fd5b505afa158015611190573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111b49190612045565b90506000610d518286611655565b600054610100900460ff16610e125760405162461bcd60e51b81526004016104559061207b565b600082815260976020526040808220600101805490849055905190918391839186917fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff9190a4505050565b60008261124081610706565b61125c5760405162461bcd60e51b815260040161045590611ffa565b6112658461071d565b1561127457610cbe8484611697565b60ca5460405163b7a0a03b60e01b81526001600160a01b03868116600483015260248201869052600092169063b7a0a03b9060440160206040518083038186803b1580156112c157600080fd5b505afa1580156112d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112f99190612062565b60ca54604051634c07d1b760e01b81526001600160a01b03888116600483015292935060009290911690634c07d1b79060240160206040518083038186803b15801561134457600080fd5b505afa158015611358573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061137c9190612045565b9050610dd78183611697565b606060006113978360026120e3565b6113a2906002612102565b67ffffffffffffffff8111156113ba576113ba611b98565b6040519080825280601f01601f1916602001820160405280156113e4576020820181803683370190505b509050600360fc1b816000815181106113ff576113ff611e87565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061142e5761142e611e87565b60200101906001600160f81b031916908160001a90535060006114528460026120e3565b61145d906001612102565b90505b60018111156114d5576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061149157611491611e87565b1a60f81b8282815181106114a7576114a7611e87565b60200101906001600160f81b031916908160001a90535060049490941c936114ce8161211a565b9050611460565b5083156106755760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610455565b6000826115308161071d565b61154c5760405162461bcd60e51b815260040161045590611de9565b600061156b8561155b876108c0565b61156690600a612215565b6115d1565b90506115958161158f61157d886108c0565b61158890600a612215565b87906116ee565b906116fa565b95945050505050565b600054610100900460ff166115c55760405162461bcd60e51b81526004016104559061207b565b6033805460ff19169055565b6000826115dd8161071d565b6115f95760405162461bcd60e51b815260040161045590611de9565b60008061160461060c565b9150915060006116286116178484611706565b611622600180611706565b90611747565b905061164a816020015161158f83600001516116448b8b6117fd565b906116ee565b979650505050505050565b6000826116618161071d565b61167d5760405162461bcd60e51b815260040161045590611de9565b600061156b8561168c876108c0565b61169790600a612215565b6000826116a38161071d565b6116bf5760405162461bcd60e51b815260040161045590611de9565b6000806116ca61060c565b9150915060006116286116dd8484611706565b6116e8600180611706565b90611866565b600061067582846120e3565b60006106758284612221565b604080518082018252600080825260209182015281518083019092528382528101829052816104ab5760405162461bcd60e51b815260040161045590611fa6565b6040805180820190915260008082526020820152826117698160200151151590565b6117855760405162461bcd60e51b815260040161045590611fa6565b826117938160200151151590565b6117af5760405162461bcd60e51b815260040161045590611fa6565b602085015184516117da916117c491906116ee565b602086015187516117d4916116ee565b906118f9565b8352602080850151908601516117ef916116ee565b602084015250909392505050565b6001600160a01b038216600090815260cf60205260408120541561185c57611855611827846108c0565b61183290600a612215565b6001600160a01b038516600090815260cf602052604090205461158f90856116ee565b90506104ab565b6118558383611905565b6040805180820190915260008082526020820152826118888160200151151590565b6118a45760405162461bcd60e51b815260040161045590611fa6565b826118b28160200151151590565b6118ce5760405162461bcd60e51b815260040161045590611fa6565b602085015184516117da916118e391906116ee565b602086015187516118f3916116ee565b90611a5e565b60006106758284612102565b600080611911846104c1565b90506000816001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561194e57600080fd5b505afa158015611962573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119869190612262565b5050509150506000826001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156119c757600080fd5b505afa1580156119db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119ff91906122b2565b60ff16905060008213611a1857600093505050506104ab565b610dd7611a24876108c0565b611a2f90600a612215565b61158f611a3d84600a612215565b61158f89611644611a4c6104b1565b611a5790600a612215565b89906116ee565b600061067582846122d5565b6001600160a01b038116811461060957600080fd5b60008060408385031215611a9257600080fd5b8235611a9d81611a6a565b946020939093013593505050565b600060208284031215611abd57600080fd5b81356001600160e01b03198116811461067557600080fd5b600060208284031215611ae757600080fd5b813561067581611a6a565b600060208284031215611b0457600080fd5b5035919050565b60008060408385031215611b1e57600080fd5b823591506020830135611b3081611a6a565b809150509250929050565b60008060008060808587031215611b5157600080fd5b8435611b5c81611a6a565b966020860135965060408601359560600135945092505050565b60008060408385031215611b8957600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611bd757611bd7611b98565b604052919050565b600067ffffffffffffffff821115611bf957611bf9611b98565b5060051b60200190565b600082601f830112611c1457600080fd5b81356020611c29611c2483611bdf565b611bae565b82815260059290921b84018101918181019086841115611c4857600080fd5b8286015b84811015611c6c578035611c5f81611a6a565b8352918301918301611c4c565b509695505050505050565b801515811461060957600080fd5b600082601f830112611c9657600080fd5b81356020611ca6611c2483611bdf565b82815260059290921b84018101918181019086841115611cc557600080fd5b8286015b84811015611c6c578035611cdc81611c77565b8352918301918301611cc9565b60008060008060808587031215611cff57600080fd5b843567ffffffffffffffff80821115611d1757600080fd5b611d2388838901611c03565b9550602091508187013581811115611d3a57600080fd5b611d4689828a01611c03565b955050604087013581811115611d5b57600080fd5b8701601f81018913611d6c57600080fd5b8035611d7a611c2482611bdf565b81815260059190911b8201840190848101908b831115611d9957600080fd5b928501925b82841015611db757833582529285019290850190611d9e565b96505050506060870135915080821115611dd057600080fd5b50611ddd87828801611c85565b91505092959194509250565b60208082526030908201527f4f7261636c65417070726f7665643a204f6e6c7920617070726f76656420746f60408201526f1ad95b9cc81b585e481899481d5cd95960821b606082015260800190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415611ec757611ec7611e9d565b5060010190565b60005b83811015611ee9578181015183820152602001611ed1565b83811115611ef8576000848401525b50505050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351611f36816017850160208801611ece565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351611f67816028840160208801611ece565b01602801949350505050565b6020815260008251806020840152611f92816040850160208701611ece565b601f01601f19169190910160400192915050565b60208082526034908201527f4672616374696f6e4d6174683a2044656e6f6d696e61746f72206f662066726160408201527306374696f6e2063616e6e6f7420657175616c20360641b606082015260800190565b6020808252602b908201527f4f7261636c654c503a204f6e6c7920737570706f7274656420746f6b656e732060408201526a1b585e481899481d5cd95960aa1b606082015260800190565b60006020828403121561205757600080fd5b815161067581611a6a565b60006020828403121561207457600080fd5b5051919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6000602082840312156120d857600080fd5b815161067581611c77565b60008160001904831182151516156120fd576120fd611e9d565b500290565b6000821982111561211557612115611e9d565b500190565b60008161212957612129611e9d565b506000190190565b600181815b8085111561216c57816000190482111561215257612152611e9d565b8085161561215f57918102915b93841c9390800290612136565b509250929050565b600082612183575060016104ab565b81612190575060006104ab565b81600181146121a657600281146121b0576121cc565b60019150506104ab565b60ff8411156121c1576121c1611e9d565b50506001821b6104ab565b5060208310610133831016604e8410600b84101617156121ef575081810a6104ab565b6121f98383612131565b806000190482111561220d5761220d611e9d565b029392505050565b60006106758383612174565b60008261223e57634e487b7160e01b600052601260045260246000fd5b500490565b805169ffffffffffffffffffff8116811461225d57600080fd5b919050565b600080600080600060a0868803121561227a57600080fd5b61228386612243565b94506020860151935060408601519250606086015191506122a660808701612243565b90509295509295909350565b6000602082840312156122c457600080fd5b815160ff8116811461067557600080fd5b6000828210156122e7576122e7611e9d565b50039056fea26469706673582212208c271e4b64a571b53d246ccbee473a70edd576e7f3ab20e0d86d829d50fe077a64736f6c63430008090033";

type OracleTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OracleTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OracleTest__factory extends ContractFactory {
  constructor(...args: OracleTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "OracleTest";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OracleTest> {
    return super.deploy(overrides || {}) as Promise<OracleTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): OracleTest {
    return super.attach(address) as OracleTest;
  }
  connect(signer: Signer): OracleTest__factory {
    return super.connect(signer) as OracleTest__factory;
  }
  static readonly contractName: "OracleTest";
  public readonly contractName: "OracleTest";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OracleTestInterface {
    return new utils.Interface(_abi) as OracleTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OracleTest {
    return new Contract(address, _abi, signerOrProvider) as OracleTest;
  }
}
