/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { OracleTest, OracleTestInterface } from "../OracleTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "thresholdNumerator_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "thresholdDenominator_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "priceDecimals_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price_",
        type: "uint256",
      },
    ],
    name: "amountMax",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price_",
        type: "uint256",
      },
    ],
    name: "amountMin",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
    ],
    name: "decimals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
    ],
    name: "isSupported",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "priceDecimals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
    ],
    name: "priceFeed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "priceMax",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "priceMin",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
    ],
    name: "reservePriceFeed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price_",
        type: "uint256",
      },
    ],
    name: "setPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "token_",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "priceFeed_",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "reservePriceFeed_",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "correctDecimals_",
        type: "uint256[]",
      },
      {
        internalType: "bool[]",
        name: "supported_",
        type: "bool[]",
      },
    ],
    name: "setPriceFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "threshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516112c53803806112c583398101604081905261002f91610099565b61003833610049565b6004929092556005556003556100c7565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000806000606084860312156100ae57600080fd5b8351925060208401519150604084015190509250925092565b6111ef806100d66000396000f3fe608060405234801561001057600080fd5b50600436106100f45760003560e01c80636145f2031161009757806395f881c91161006657806395f881c91461022b578063b1d5e1b91461023e578063d449a83214610251578063f2fde38b1461026457600080fd5b80636145f203146101cf578063715018a6146101e2578063833b8282146101ea5780638da5cb5b1461021a57600080fd5b806342cde4e8116100d357806342cde4e814610169578063468cde72146101865780634f129c5314610199578063561c2ed8146101bc57600080fd5b8062e4768b146100f957806305300b281461010e5780631fd48b9a14610125575b600080fd5b61010c610107366004610bf4565b610277565b005b6003545b6040519081526020015b60405180910390f35b610151610133366004610c1e565b6001600160a01b039081166000908152600160205260409020541690565b6040516001600160a01b03909116815260200161011c565b6101716102c3565b6040805192835260208301919091520161011c565b610112610194366004610bf4565b6102f0565b6101ac6101a7366004610c1e565b61033f565b604051901515815260200161011c565b6101126101ca366004610bf4565b610363565b61010c6101dd366004610ddb565b6103b6565b61010c610517565b6101516101f8366004610c1e565b6001600160a01b03908116600090815260016020819052604090912001541690565b6000546001600160a01b0316610151565b610112610239366004610bf4565b61054d565b61011261024c366004610bf4565b610568565b61011261025f366004610c1e565b610599565b61010c610272366004610c1e565b6105b7565b816102818161033f565b6102a65760405162461bcd60e51b815260040161029d90610ead565b60405180910390fd5b506001600160a01b03909116600090815260026020526040902055565b604080518082019091526004548152600554602082015260009081906102e890610652565b915091509091565b60008061030b8461030086610599565b6101ca90600a610ff6565b90506103358161032f61031d87610599565b61032890600a610ff6565b869061068b565b9061069e565b9150505b92915050565b6001600160a01b03811660009081526001602052604081206003015460ff16610339565b604080518082019091526004548152600554602082015260009081906103949061038e6001806106aa565b90610732565b9050610335816020015161032f83600001516103b088886107e0565b9061068b565b6000546001600160a01b031633146103e05760405162461bcd60e51b815260040161029d90611002565b60005b855181101561050f5760006001600088848151811061040457610404611037565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020905085828151811061044057610440611037565b602090810291909101015181546001600160a01b0319166001600160a01b03909116178155845185908390811061047957610479611037565b60200260200101518160010160006101000a8154816001600160a01b0302191690836001600160a01b031602179055508382815181106104bb576104bb611037565b602002602001015181600201819055508282815181106104dd576104dd611037565b6020908102919091010151600391909101805460ff1916911515919091179055806105078161104d565b9150506103e3565b505050505050565b6000546001600160a01b031633146105415760405162461bcd60e51b815260040161029d90611002565b61054b6000610ae5565b565b60008061030b8461055d86610599565b61024c90600a610ff6565b60408051808201909152600454815260055460208201526000908190610394906105936001806106aa565b90610b35565b6001600160a01b031660009081526001602052604090206002015490565b6000546001600160a01b031633146105e15760405162461bcd60e51b815260040161029d90611002565b6001600160a01b0381166106465760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161029d565b61064f81610ae5565b50565b6000808280602001516000141561067b5760405162461bcd60e51b815260040161029d90611068565b5050815160209092015191929050565b600061069782846110bc565b9392505050565b600061069782846110db565b60408051808201909152600080825260208201528161071c5760405162461bcd60e51b815260206004820152602860248201527f4672616374696f6e4d6174683a2044656e6f6d696e61746f722063616e6e6f7460448201526720657175616c206f60c01b606482015260840161029d565b5060408051808201909152918252602082015290565b60408051808201909152600080825260208201528280602001516000141561076c5760405162461bcd60e51b815260040161029d90611068565b828060200151600014156107925760405162461bcd60e51b815260040161029d90611068565b602085015184516107bd916107a7919061068b565b602086015187516107b79161068b565b90610bc0565b8352602080850151908601516107d29161068b565b602084015250909392505050565b6000826107ec8161033f565b6108085760405162461bcd60e51b815260040161029d90610ead565b600061084461081686610599565b61082190600a610ff6565b6001600160a01b03871660009081526002602052604090205461032f908761068b565b90508015610853579150610ade565b6001600160a01b0380861660009081526001602052604081205490911690506000816001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156108ad57600080fd5b505afa1580156108c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e59190611117565b5050509150506000826001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561092657600080fd5b505afa15801561093a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095e9190611167565b60ff16905060008213610a80576001600160a01b0380891660009081526001602081905260409091200154169250826001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156109c557600080fd5b505afa1580156109d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109fd9190611117565b50506040805163313ce56760e01b815290519295506001600160a01b038716935063313ce5679260048083019350602092829003018186803b158015610a4257600080fd5b505afa158015610a56573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7a9190611167565b60ff1690505b60008213610a95576000955050505050610ade565b610ad7610aa189610599565b610aac90600a610ff6565b61032f610aba84600a610ff6565b61032f8b6103b0600354600a610ad09190610ff6565b899061068b565b9550505050505b5092915050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b604080518082019091526000808252602082015282806020015160001415610b6f5760405162461bcd60e51b815260040161029d90611068565b82806020015160001415610b955760405162461bcd60e51b815260040161029d90611068565b602085015184516107bd91610baa919061068b565b60208601518751610bba9161068b565b90610bcc565b6000610697828461118a565b600061069782846111a2565b80356001600160a01b0381168114610bef57600080fd5b919050565b60008060408385031215610c0757600080fd5b610c1083610bd8565b946020939093013593505050565b600060208284031215610c3057600080fd5b61069782610bd8565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610c7857610c78610c39565b604052919050565b600067ffffffffffffffff821115610c9a57610c9a610c39565b5060051b60200190565b600082601f830112610cb557600080fd5b81356020610cca610cc583610c80565b610c4f565b82815260059290921b84018101918181019086841115610ce957600080fd5b8286015b84811015610d0b57610cfe81610bd8565b8352918301918301610ced565b509695505050505050565b600082601f830112610d2757600080fd5b81356020610d37610cc583610c80565b82815260059290921b84018101918181019086841115610d5657600080fd5b8286015b84811015610d0b5780358352918301918301610d5a565b600082601f830112610d8257600080fd5b81356020610d92610cc583610c80565b82815260059290921b84018101918181019086841115610db157600080fd5b8286015b84811015610d0b5780358015158114610dce5760008081fd5b8352918301918301610db5565b600080600080600060a08688031215610df357600080fd5b853567ffffffffffffffff80821115610e0b57600080fd5b610e1789838a01610ca4565b96506020880135915080821115610e2d57600080fd5b610e3989838a01610ca4565b95506040880135915080821115610e4f57600080fd5b610e5b89838a01610ca4565b94506060880135915080821115610e7157600080fd5b610e7d89838a01610d16565b93506080880135915080821115610e9357600080fd5b50610ea088828901610d71565b9150509295509295909350565b6020808252602f908201527f4f7261636c65546f6b656e733a204f6e6c7920737570706f7274656420746f6b60408201526e195b9cc81b585e481899481d5cd959608a1b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115610f4d578160001904821115610f3357610f33610efc565b80851615610f4057918102915b93841c9390800290610f17565b509250929050565b600082610f6457506001610339565b81610f7157506000610339565b8160018114610f875760028114610f9157610fad565b6001915050610339565b60ff841115610fa257610fa2610efc565b50506001821b610339565b5060208310610133831016604e8410600b8410161715610fd0575081810a610339565b610fda8383610f12565b8060001904821115610fee57610fee610efc565b029392505050565b60006106978383610f55565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052603260045260246000fd5b600060001982141561106157611061610efc565b5060010190565b60208082526034908201527f4672616374696f6e4d6174683a2044656e6f6d696e61746f72206f662066726160408201527306374696f6e2063616e6e6f7420657175616c20360641b606082015260800190565b60008160001904831182151516156110d6576110d6610efc565b500290565b6000826110f857634e487b7160e01b600052601260045260246000fd5b500490565b805169ffffffffffffffffffff81168114610bef57600080fd5b600080600080600060a0868803121561112f57600080fd5b611138866110fd565b945060208601519350604086015192506060860151915061115b608087016110fd565b90509295509295909350565b60006020828403121561117957600080fd5b815160ff8116811461069757600080fd5b6000821982111561119d5761119d610efc565b500190565b6000828210156111b4576111b4610efc565b50039056fea2646970667358221220e46b2313f73612c353c5f687996d8289442eb5aec954b4f7acea5c5faf91412764736f6c63430008090033";

type OracleTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OracleTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OracleTest__factory extends ContractFactory {
  constructor(...args: OracleTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "OracleTest";
  }

  deploy(
    thresholdNumerator_: BigNumberish,
    thresholdDenominator_: BigNumberish,
    priceDecimals_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OracleTest> {
    return super.deploy(
      thresholdNumerator_,
      thresholdDenominator_,
      priceDecimals_,
      overrides || {}
    ) as Promise<OracleTest>;
  }
  getDeployTransaction(
    thresholdNumerator_: BigNumberish,
    thresholdDenominator_: BigNumberish,
    priceDecimals_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      thresholdNumerator_,
      thresholdDenominator_,
      priceDecimals_,
      overrides || {}
    );
  }
  attach(address: string): OracleTest {
    return super.attach(address) as OracleTest;
  }
  connect(signer: Signer): OracleTest__factory {
    return super.connect(signer) as OracleTest__factory;
  }
  static readonly contractName: "OracleTest";
  public readonly contractName: "OracleTest";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OracleTestInterface {
    return new utils.Interface(_abi) as OracleTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OracleTest {
    return new Contract(address, _abi, signerOrProvider) as OracleTest;
  }
}
