/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { OracleReserve, OracleReserveInterface } from "../OracleReserve";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "oracle_",
        type: "address",
      },
      {
        internalType: "address",
        name: "pool_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price_",
        type: "uint256",
      },
    ],
    name: "amountMax",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price_",
        type: "uint256",
      },
    ],
    name: "amountMin",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "priceDecimals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "priceMax",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "priceMin",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oracle_",
        type: "address",
      },
    ],
    name: "setOracle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool_",
        type: "address",
      },
    ],
    name: "setPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516105c23803806105c283398101604081905261002f916100d5565b61003833610069565b600180546001600160a01b039384166001600160a01b03199182161790915560028054929093169116179055610108565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146100d057600080fd5b919050565b600080604083850312156100e857600080fd5b6100f1836100b9565b91506100ff602084016100b9565b90509250929050565b6104ab806101176000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80637adbf973116100715780637adbf973146101325780637dc0d1d0146101455780638da5cb5b1461015857806395f881c914610114578063b1d5e1b914610114578063f2fde38b1461016957600080fd5b806305300b28146100b957806316f0115b146100d45780634437152a146100ff578063468cde7214610114578063561c2ed814610114578063715018a61461012a575b600080fd5b6100c161017c565b6040519081526020015b60405180910390f35b6002546100e7906001600160a01b031681565b6040516001600160a01b0390911681526020016100cb565b61011261010d3660046103db565b6101fd565b005b6100c16101223660046103fd565b600092915050565b610112610252565b6101126101403660046103db565b610288565b6001546100e7906001600160a01b031681565b6000546001600160a01b03166100e7565b6101126101773660046103db565b6102d4565b6001546040805162a6016560e31b815290516000926001600160a01b0316916305300b28916004808301926020929190829003018186803b1580156101c057600080fd5b505afa1580156101d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f89190610427565b905090565b6000546001600160a01b031633146102305760405162461bcd60e51b815260040161022790610440565b60405180910390fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b0316331461027c5760405162461bcd60e51b815260040161022790610440565b610286600061036f565b565b6000546001600160a01b031633146102b25760405162461bcd60e51b815260040161022790610440565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146102fe5760405162461bcd60e51b815260040161022790610440565b6001600160a01b0381166103635760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610227565b61036c8161036f565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b03811681146103d657600080fd5b919050565b6000602082840312156103ed57600080fd5b6103f6826103bf565b9392505050565b6000806040838503121561041057600080fd5b610419836103bf565b946020939093013593505050565b60006020828403121561043957600080fd5b5051919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea264697066735822122096f76a1153bc40b60def4a2612d33dccbdd64a3cb7c4f46edfe07ab3c13cbe2364736f6c63430008090033";

type OracleReserveConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OracleReserveConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OracleReserve__factory extends ContractFactory {
  constructor(...args: OracleReserveConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "OracleReserve";
  }

  deploy(
    oracle_: string,
    pool_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OracleReserve> {
    return super.deploy(
      oracle_,
      pool_,
      overrides || {}
    ) as Promise<OracleReserve>;
  }
  getDeployTransaction(
    oracle_: string,
    pool_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(oracle_, pool_, overrides || {});
  }
  attach(address: string): OracleReserve {
    return super.attach(address) as OracleReserve;
  }
  connect(signer: Signer): OracleReserve__factory {
    return super.connect(signer) as OracleReserve__factory;
  }
  static readonly contractName: "OracleReserve";
  public readonly contractName: "OracleReserve";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OracleReserveInterface {
    return new utils.Interface(_abi) as OracleReserveInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OracleReserve {
    return new Contract(address, _abi, signerOrProvider) as OracleReserve;
  }
}
