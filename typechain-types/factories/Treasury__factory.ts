/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Treasury, TreasuryInterface } from "../Treasury";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reserveTokenAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "treasuryAsset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "treasuryAssetAmount",
        type: "uint256",
      },
    ],
    name: "RedeemReserveToken",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oracle_",
        type: "address",
      },
      {
        internalType: "address",
        name: "reserveToken_",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oracle_",
        type: "address",
      },
      {
        internalType: "address",
        name: "reserveToken_",
        type: "address",
      },
    ],
    name: "initializeTreasuryCore",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
    ],
    name: "isApprovedTreasuryAsset",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
    ],
    name: "redeemReserveToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
    ],
    name: "redeemTreasuryTokenAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "reserveToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "token_",
        type: "address[]",
      },
      {
        internalType: "bool[]",
        name: "approved_",
        type: "bool[]",
      },
    ],
    name: "setApprovedTreasuryToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oracle_",
        type: "address",
      },
    ],
    name: "setOracle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "reserveToken_",
        type: "address",
      },
    ],
    name: "setReserveToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
    ],
    name: "totalAmountLocked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tvl",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
    ],
    name: "tvl",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611612806100206000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806384f2b38411610097578063e5328e0611610066578063e5328e0614610219578063e75db61614610221578063f2fde38b14610234578063f4325d671461024757600080fd5b806384f2b384146101bf5780638da5cb5b146101d2578063b87ffac2146101e3578063c0c15f4c146101f657600080fd5b8063749c63c4116100d3578063749c63c41461015b57806376509a931461016e5780637adbf973146101815780637dc0d1d01461019457600080fd5b8063292ceee314610105578063485cc9551461012b57806351ee198b14610140578063715018a614610153575b600080fd5b61011861011336600461115c565b61025a565b6040519081526020015b60405180910390f35b61013e610139366004611188565b61037a565b005b61013e61014e366004611188565b6103f8565b61013e61049b565b61011861016936600461115c565b6104d1565b61011861017c3660046111b2565b61063b565b61013e61018f3660046111b2565b6106e2565b6065546101a7906001600160a01b031681565b6040516001600160a01b039091168152602001610122565b61013e6101cd3660046111b2565b61072e565b6033546001600160a01b03166101a7565b61013e6101f13660046112ba565b61077a565b6102096102043660046111b2565b6109a0565b6040519015158152602001610122565b6101186109be565b61011861022f3660046111b2565b610a1f565b61013e6102423660046111b2565b610a93565b6066546101a7906001600160a01b031681565b600081610266816109a0565b61028b5760405162461bcd60e51b81526004016102829061137a565b60405180910390fd5b600061029785856104d1565b6066549091506001600160a01b0316639dc29fac336040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260248101889052604401600060405180830381600087803b1580156102f457600080fd5b505af1158015610308573d6000803e3d6000fd5b505050506103276103163390565b6001600160a01b0386169083610b2e565b604080518681526001600160a01b0386166020820152808201839052905133917f9248f052bf2cc11172877c6710729a0044ce5434a30de2f8e916c48f982dd7fb919081900360600190a2949350505050565b600054610100900460ff166103955760005460ff1615610399565b303b155b6103b55760405162461bcd60e51b8152600401610282906113d7565b600054610100900460ff161580156103d7576000805461ffff19166101011790555b6103e183836103f8565b80156103f3576000805461ff00191690555b505050565b600054610100900460ff166104135760005460ff1615610417565b303b155b6104335760405162461bcd60e51b8152600401610282906113d7565b600054610100900460ff16158015610455576000805461ffff19166101011790555b606580546001600160a01b038086166001600160a01b031992831617909255606680549285169290911691909117905580156103f3576000805461ff0019169055505050565b6033546001600160a01b031633146104c55760405162461bcd60e51b815260040161028290611425565b6104cf6000610b80565b565b6000816104dd816109a0565b6104f95760405162461bcd60e51b81526004016102829061137a565b60006105036109be565b90506000606660009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561055557600080fd5b505afa158015610569573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058d919061145a565b905060006105a58261059f8986610bd2565b90610be7565b6065546040516323466f3960e11b81526001600160a01b038981166004830152602482018490529293506000929091169063468cde729060440160206040518083038186803b1580156105f757600080fd5b505afa15801561060b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062f919061145a565b98975050505050505050565b600081610647816109a0565b6106635760405162461bcd60e51b81526004016102829061137a565b6040516370a0823160e01b81523060048201526001600160a01b038416906370a08231906024015b60206040518083038186803b1580156106a357600080fd5b505afa1580156106b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106db919061145a565b9392505050565b6033546001600160a01b0316331461070c5760405162461bcd60e51b815260040161028290611425565b606580546001600160a01b0319166001600160a01b0392909216919091179055565b6033546001600160a01b031633146107585760405162461bcd60e51b815260040161028290611425565b606680546001600160a01b0319166001600160a01b0392909216919091179055565b6033546001600160a01b031633146107a45760405162461bcd60e51b815260040161028290611425565b60005b82518110156103f35760665483516001600160a01b03909116908490839081106107d3576107d3611473565b60200260200101516001600160a01b03161461098e578181815181106107fb576107fb611473565b60200260200101516067600085848151811061081957610819611473565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548160ff0219169083151502179055506067600084838151811061086e5761086e611473565b6020908102919091018101516001600160a01b031682528101919091526040016000205460ff1680156108cb57506108c98382815181106108b1576108b1611473565b60200260200101516068610bf390919063ffffffff16565b155b15610902576108fd8382815181106108e5576108e5611473565b60200260200101516068610c5490919063ffffffff16565b61098e565b6067600084838151811061091857610918611473565b6020908102919091018101516001600160a01b031682528101919091526040016000205460ff1615801561095c575061095c8382815181106108b1576108b1611473565b1561098e5761098e83828151811061097657610976611473565b60200260200101516068610d1a90919063ffffffff16565b806109988161149f565b9150506107a7565b6001600160a01b031660009081526067602052604090205460ff1690565b6000806109c9610e6a565b90506000805b8251811015610a1857610a046109fd8483815181106109f0576109f0611473565b6020026020010151610a1f565b8390610e7b565b915080610a108161149f565b9150506109cf565b5092915050565b600081610a2b816109a0565b610a475760405162461bcd60e51b81526004016102829061137a565b6065546001600160a01b031663561c2ed884610a628161063b565b6040516001600160e01b031960e085901b1681526001600160a01b039092166004830152602482015260440161068b565b6033546001600160a01b03163314610abd5760405162461bcd60e51b815260040161028290611425565b6001600160a01b038116610b225760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610282565b610b2b81610b80565b50565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526103f3908490610e87565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000610bde82846114ba565b90505b92915050565b6000610bde82846114d9565b6001820154600090610c0757506000610be1565b6001600160a01b0382166000818152602085905260409020546001850180549091908110610c3757610c37611473565b6000918252602090912001546001600160a01b0316149392505050565b610c5e8282610bf3565b15610cc25760405162461bcd60e51b815260206004820152602e60248201527f416464726573735365743a204164647265737320616c7265616479206578697360448201526d3a399034b7103a34329039b2ba1760911b6064820152608401610282565b6001828101805480830182556000828152602090200180546001600160a01b0319166001600160a01b03851617905554610cfc91906114fb565b6001600160a01b039091166000908152602092909252604090912055565b610d248282610bf3565b610d875760405162461bcd60e51b815260206004820152602e60248201527f416464726573735365743a204164647265737320646f6573206e6f742065786960448201526d39ba1034b7103a34329039b2ba1760911b6064820152608401610282565b60018281018054600092610d9a916114fb565b81548110610daa57610daa611473565b60009182526020808320909101546001600160a01b03858116845291869052604080842054929091168084529220819055600185018054929350909183919083908110610df957610df9611473565b600091825260208083209190910180546001600160a01b0319166001600160a01b03948516179055918516815290859052604081205560018401805480610e4257610e42611512565b600082815260209020810160001990810180546001600160a01b031916905501905550505050565b6060610e766068610f59565b905090565b6000610bde8284611528565b6000610edc826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610fbf9092919063ffffffff16565b8051909150156103f35780806020019051810190610efa9190611540565b6103f35760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610282565b606081600101805480602002602001604051908101604052809291908181526020018280548015610fb357602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610f95575b50505050509050919050565b6060610fce8484600085610fd6565b949350505050565b6060824710156110375760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610282565b6001600160a01b0385163b61108e5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610282565b600080866001600160a01b031685876040516110aa919061158d565b60006040518083038185875af1925050503d80600081146110e7576040519150601f19603f3d011682016040523d82523d6000602084013e6110ec565b606091505b50915091506110fc828286611107565b979650505050505050565b606083156111165750816106db565b8251156111265782518084602001fd5b8160405162461bcd60e51b815260040161028291906115a9565b80356001600160a01b038116811461115757600080fd5b919050565b6000806040838503121561116f57600080fd5b8235915061117f60208401611140565b90509250929050565b6000806040838503121561119b57600080fd5b6111a483611140565b915061117f60208401611140565b6000602082840312156111c457600080fd5b610bde82611140565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561120c5761120c6111cd565b604052919050565b600067ffffffffffffffff82111561122e5761122e6111cd565b5060051b60200190565b8015158114610b2b57600080fd5b600082601f83011261125757600080fd5b8135602061126c61126783611214565b6111e3565b82815260059290921b8401810191818101908684111561128b57600080fd5b8286015b848110156112af5780356112a281611238565b835291830191830161128f565b509695505050505050565b600080604083850312156112cd57600080fd5b823567ffffffffffffffff808211156112e557600080fd5b818501915085601f8301126112f957600080fd5b8135602061130961126783611214565b82815260059290921b8401810191818101908984111561132857600080fd5b948201945b8386101561134d5761133e86611140565b8252948201949082019061132d565b9650508601359250508082111561136357600080fd5b5061137085828601611246565b9150509250929050565b6020808252603b908201527f5472656173757279417070726f7665643a204f6e6c7920617070726f7665642060408201527f747265617375727920617373657473206d617920626520757365640000000000606082015260800190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006020828403121561146c57600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156114b3576114b3611489565b5060010190565b60008160001904831182151516156114d4576114d4611489565b500290565b6000826114f657634e487b7160e01b600052601260045260246000fd5b500490565b60008282101561150d5761150d611489565b500390565b634e487b7160e01b600052603160045260246000fd5b6000821982111561153b5761153b611489565b500190565b60006020828403121561155257600080fd5b81516106db81611238565b60005b83811015611578578181015183820152602001611560565b83811115611587576000848401525b50505050565b6000825161159f81846020870161155d565b9190910192915050565b60208152600082518060208401526115c881604085016020870161155d565b601f01601f1916919091016040019291505056fea2646970667358221220c21100d0ffb74276c19c1d0a495fea8078028566492e2eb458b9f6750999be0164736f6c63430008090033";

type TreasuryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TreasuryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Treasury__factory extends ContractFactory {
  constructor(...args: TreasuryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Treasury";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Treasury> {
    return super.deploy(overrides || {}) as Promise<Treasury>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Treasury {
    return super.attach(address) as Treasury;
  }
  connect(signer: Signer): Treasury__factory {
    return super.connect(signer) as Treasury__factory;
  }
  static readonly contractName: "Treasury";
  public readonly contractName: "Treasury";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TreasuryInterface {
    return new utils.Interface(_abi) as TreasuryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Treasury {
    return new Contract(address, _abi, signerOrProvider) as Treasury;
  }
}
